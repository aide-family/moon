# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/alert/list:
        post:
            tags:
                - Alert
            operationId: Alert_ListAlerts
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListAlertParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListAlertReply'
    /api/alert/push:
        post:
            tags:
                - Alert
            operationId: Alert_PushAlert
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.common.AlertItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/auth/captcha:
        get:
            tags:
                - Auth
            description: GetCaptcha sends a captcha image to the client
            operationId: Auth_GetCaptcha
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetCaptchaReply'
    /api/auth/filing/information:
        post:
            tags:
                - Auth
            description: GetFilingInformation gets the filing information
            operationId: Auth_GetFilingInformation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.common.EmptyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetFilingInformationReply'
    /api/auth/login:
        post:
            tags:
                - Auth
            description: LoginByPassword authenticates a user with email and password
            operationId: Auth_LoginByPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.LoginByPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LoginReply'
    /api/auth/login/email:
        post:
            tags:
                - Auth
            description: LoginByEmail logs in using email verification code
            operationId: Auth_LoginByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.LoginByEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LoginReply'
    /api/auth/logout:
        post:
            tags:
                - Auth
            description: Logout logs out the user
            operationId: Auth_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LogoutReply'
    /api/auth/member/role:
        post:
            tags:
                - Auth
            description: ReplaceMemberRole updates the member's role
            operationId: Auth_ReplaceMemberRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ReplaceMemberRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/auth/oauth2/list:
        post:
            tags:
                - Auth
            description: OAuth2List returns the list of supported OAuth2.0 providers
            operationId: Auth_OAuth2List
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.common.EmptyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.OAuth2ListReply'
    /api/auth/oauth2/login/email:
        post:
            tags:
                - Auth
            description: OAuthLoginByEmail logs in using OAuth2.0 and email
            operationId: Auth_OAuthLoginByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.OAuthLoginByEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LoginReply'
    /api/auth/refresh:
        post:
            tags:
                - Auth
            description: RefreshToken refreshes the login token
            operationId: Auth_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.common.EmptyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LoginReply'
    /api/auth/self/menu/tree:
        post:
            tags:
                - Auth
            description: GetSelfMenuTree returns the menu tree
            operationId: Auth_GetSelfMenuTree
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.common.EmptyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetSelfMenuTreeReply'
    /api/auth/user/role:
        post:
            tags:
                - Auth
            description: ReplaceUserRole updates the user's role
            operationId: Auth_ReplaceUserRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ReplaceUserRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/auth/verify/email:
        post:
            tags:
                - Auth
            description: VerifyEmail verifies the user's email address
            operationId: Auth_VerifyEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.VerifyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.VerifyEmailReply'
    /api/menu/detail:
        get:
            tags:
                - Resource
            description: GetMenu retrieves a menu by Id
            operationId: Resource_GetMenu
            parameters:
                - name: menuId
                  in: query
                  description: Id of the menu to retrieve
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.MenuTreeItem'
    /api/menu/save:
        put:
            tags:
                - Resource
            description: SaveMenu creates or updates a system menu
            operationId: Resource_SaveMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveMenuRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/menu/tree:
        get:
            tags:
                - Resource
            description: GetResourceMenuTree returns the menu tree
            operationId: Resource_GetResourceMenuTree
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetResourceMenuTreeReply'
    /api/resource/batch/status:
        put:
            tags:
                - Resource
            description: BatchUpdateResourceStatus updates the status of multiple resources
            operationId: Resource_BatchUpdateResourceStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.BatchUpdateResourceStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/resource/detail:
        get:
            tags:
                - Resource
            description: GetResource retrieves a resource by Id
            operationId: Resource_GetResource
            parameters:
                - name: resourceId
                  in: query
                  description: Id of the resource to retrieve
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.ResourceItem'
    /api/resource/list:
        post:
            tags:
                - Resource
            description: ListResource lists resources based on specified filters
            operationId: Resource_ListResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListResourceReply'
    /api/resource/save:
        put:
            tags:
                - Resource
            description: SaveResource creates or updates a resource
            operationId: Resource_SaveResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/operate/log/list:
        post:
            tags:
                - System
            description: OperateLogList lists operation logs based on specified filters
            operationId: System_OperateLogList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.OperateLogListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.OperateLogListReply'
    /api/system/role:
        get:
            tags:
                - System
            description: GetSystemRole retrieves a system role by Id
            operationId: System_GetSystemRole
            parameters:
                - name: roleId
                  in: query
                  description: Role Id
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.SystemRoleItem'
        post:
            tags:
                - System
            description: SaveRole saves a new role or updates an existing one
            operationId: System_SaveRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/role/list:
        post:
            tags:
                - System
            description: GetSystemRoles lists system roles based on specified filters
            operationId: System_GetSystemRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetSystemRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetSystemRolesReply'
    /api/system/role/status:
        put:
            tags:
                - System
            description: UpdateRoleStatus updates the status of a role
            operationId: System_UpdateRoleStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateRoleStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/role/users:
        put:
            tags:
                - System
            description: UpdateRoleUsers updates the users assigned to a role
            operationId: System_UpdateRoleUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateRoleUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/team/audit/list:
        post:
            tags:
                - System
            description: GetTeamAuditList lists team audit records based on specified filters
            operationId: System_GetTeamAuditList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetTeamAuditListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamAuditListReply'
    /api/system/team/audit/status:
        put:
            tags:
                - System
            description: UpdateTeamAuditStatus updates the status of a team audit record
            operationId: System_UpdateTeamAuditStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamAuditStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/team/detail:
        get:
            tags:
                - System
            description: GetTeam retrieves a team by Id
            operationId: System_GetTeam
            parameters:
                - name: teamId
                  in: query
                  description: Team Id
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.TeamItem'
    /api/system/team/list:
        post:
            tags:
                - System
            description: GetTeamList lists teams based on specified filters
            operationId: System_GetTeamList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetTeamListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamListReply'
    /api/system/user:
        put:
            tags:
                - System
            description: UpdateUser updates user information
            operationId: System_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/detail:
        get:
            tags:
                - System
            description: GetUser retrieves a user by Id
            operationId: System_GetUser
            parameters:
                - name: userId
                  in: query
                  description: User Id
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.UserItem'
    /api/system/user/list:
        post:
            tags:
                - System
            description: GetUserList lists users based on specified filters
            operationId: System_GetUserList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetUserListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetUserListReply'
    /api/system/user/password:
        put:
            tags:
                - System
            description: ResetUserPassword resets the password for multiple users
            operationId: System_ResetUserPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ResetUserPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/position:
        put:
            tags:
                - System
            description: UpdateUserPosition updates the position of a user
            operationId: System_UpdateUserPosition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateUserPositionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/roles:
        put:
            tags:
                - System
            description: UpdateUserRoles updates the roles assigned to a user
            operationId: System_UpdateUserRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateUserRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/status:
        put:
            tags:
                - System
            description: UpdateUserStatus updates the status of multiple users
            operationId: System_UpdateUserStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateUserStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/dashboard:
        get:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_GetTeamDashboard
            parameters:
                - name: dashboardId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.TeamDashboardItem'
        put:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_SaveTeamDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_DeleteTeamDashboard
            parameters:
                - name: dashboardId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/dashboard/chart:
        get:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_GetTeamDashboardChart
            parameters:
                - name: chartId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: dashboardId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.TeamDashboardChartItem'
        put:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_SaveTeamDashboardChart
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamDashboardChartRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_DeleteTeamDashboardChart
            parameters:
                - name: chartId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: dashboardId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/dashboard/chart/list:
        post:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_ListTeamDashboardChart
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamDashboardChartRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamDashboardChartReply'
    /api/team/dashboard/chart/status:
        put:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_UpdateTeamDashboardChartStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamDashboardChartStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/dashboard/list:
        post:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_ListTeamDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamDashboardReply'
    /api/team/dashboard/status:
        put:
            tags:
                - TeamDashboard
            operationId: TeamDashboard_UpdateTeamDashboardStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamDashboardStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/detail:
        get:
            tags:
                - Team
            description: GetTeam retrieves the details of the current team
            operationId: Team_GetTeam
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.TeamItem'
    /api/team/dict:
        get:
            tags:
                - TeamDict
            operationId: TeamDict_GetTeamDict
            parameters:
                - name: dictId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.TeamDictItem'
        post:
            tags:
                - TeamDict
            operationId: TeamDict_SaveTeamDict
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamDictRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamDict
            operationId: TeamDict_DeleteTeamDict
            parameters:
                - name: dictId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/dict/list:
        post:
            tags:
                - TeamDict
            operationId: TeamDict_ListTeamDict
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamDictRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamDictReply'
    /api/team/dict/status:
        put:
            tags:
                - TeamDict
            operationId: TeamDict_UpdateTeamDictStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamDictStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/email/config:
        put:
            tags:
                - Team
            description: SaveEmailConfig saves or updates the email configuration for the team
            operationId: Team_SaveEmailConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveEmailConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/email/configs:
        post:
            tags:
                - Team
            description: GetEmailConfigs retrieves the email configuration for the team
            operationId: Team_GetEmailConfigs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetEmailConfigsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetEmailConfigsReply'
    /api/team/invite/member:
        post:
            tags:
                - Team
            description: InviteMember invites a new member to the team
            operationId: Team_InviteMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.InviteMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/log/send/message:
        get:
            tags:
                - TeamLog
            operationId: TeamLog_GetSendMessageLog
            parameters:
                - name: requestId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.SendMessageLogItem'
        post:
            tags:
                - TeamLog
            operationId: TeamLog_GetSendMessageLogs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetTeamSendMessageLogsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamSendMessageLogsReply'
    /api/team/log/send/message/retry:
        post:
            tags:
                - TeamLog
            operationId: TeamLog_RetrySendMessage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.OperateOneTeamSendMessageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/members:
        post:
            tags:
                - Team
            description: GetTeamMembers retrieves the list of members in the team
            operationId: Team_GetTeamMembers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetTeamMembersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamMembersReply'
    /api/team/menu/tree:
        get:
            tags:
                - Resource
            description: GetTeamResourceMenuTree returns the menu tree
            operationId: Resource_GetTeamResourceMenuTree
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetResourceMenuTreeReply'
    /api/team/metric/datasource:
        get:
            tags:
                - TeamDatasource
            operationId: TeamDatasource_GetTeamMetricDatasource
            parameters:
                - name: datasourceId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.TeamMetricDatasourceItem'
        post:
            tags:
                - TeamDatasource
            operationId: TeamDatasource_SaveTeamMetricDatasource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamMetricDatasourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamDatasource
            operationId: TeamDatasource_DeleteTeamMetricDatasource
            parameters:
                - name: datasourceId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/metric/datasource/list:
        post:
            tags:
                - TeamDatasource
            operationId: TeamDatasource_ListTeamMetricDatasource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamMetricDatasourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamMetricDatasourceReply'
    /api/team/metric/datasource/query:
        post:
            tags:
                - TeamDatasource
            operationId: TeamDatasource_MetricDatasourceQuery
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.MetricDatasourceQueryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.common.MetricDatasourceQueryReply'
    /api/team/metric/datasource/status:
        put:
            tags:
                - TeamDatasource
            operationId: TeamDatasource_UpdateTeamMetricDatasourceStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamMetricDatasourceStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/metric/datasource/sync/metadata:
        post:
            tags:
                - TeamDatasource
            operationId: TeamDatasource_SyncMetricMetadata
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SyncMetricMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/notice/group:
        get:
            tags:
                - TeamNotice
            operationId: TeamNotice_GetTeamNoticeGroup
            parameters:
                - name: groupId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.NoticeGroupItem'
        post:
            tags:
                - TeamNotice
            operationId: TeamNotice_SaveTeamNoticeGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamNoticeGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamNotice
            operationId: TeamNotice_DeleteTeamNoticeGroup
            parameters:
                - name: groupId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/notice/group/list:
        post:
            tags:
                - TeamNotice
            operationId: TeamNotice_ListTeamNoticeGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamNoticeGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamNoticeGroupReply'
    /api/team/notice/group/status:
        put:
            tags:
                - TeamNotice
            operationId: TeamNotice_UpdateTeamNoticeGroupStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamNoticeGroupStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/notice/hook:
        get:
            tags:
                - TeamNotice
            operationId: TeamNotice_GetTeamNoticeHook
            parameters:
                - name: hookId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.NoticeHookItem'
        post:
            tags:
                - TeamNotice
            operationId: TeamNotice_SaveTeamNoticeHook
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamNoticeHookRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamNotice
            operationId: TeamNotice_DeleteTeamNoticeHook
            parameters:
                - name: hookId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/notice/hook/list:
        post:
            tags:
                - TeamNotice
            operationId: TeamNotice_ListTeamNoticeHook
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamNoticeHookRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamNoticeHookReply'
    /api/team/notice/hook/status:
        put:
            tags:
                - TeamNotice
            operationId: TeamNotice_UpdateTeamNoticeHookStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamNoticeHookStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/operate/log/list:
        post:
            tags:
                - Team
            description: OperateLogList lists operation logs based on specified filters
            operationId: Team_OperateLogList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.TeamOperateLogListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.TeamOperateLogListReply'
    /api/team/remove/member:
        post:
            tags:
                - Team
            description: RemoveMember removes a member from the team
            operationId: Team_RemoveMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.RemoveMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/resources:
        get:
            tags:
                - Team
            description: GetTeamResources retrieves the resources associated with the current team
            operationId: Team_GetTeamResources
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamResourcesReply'
    /api/team/role/status:
        put:
            tags:
                - Team
            description: UpdateTeamRoleStatus updates the status of a team role
            operationId: Team_UpdateTeamRoleStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamRoleStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/roles:
        put:
            tags:
                - Team
            description: SaveTeamRole saves a new team role or updates an existing one
            operationId: Team_SaveTeamRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        post:
            tags:
                - Team
            description: GetTeamRoles retrieves the roles available in the team
            operationId: Team_GetTeamRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetTeamRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamRolesReply'
        delete:
            tags:
                - Team
            description: DeleteTeamRole deletes a team role by Id
            operationId: Team_DeleteTeamRole
            parameters:
                - name: roleId
                  in: query
                  description: Role Id
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/save:
        put:
            tags:
                - Team
            description: SaveTeam saves a new team or updates an existing one
            operationId: Team_SaveTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/sms/config:
        put:
            tags:
                - Team
            description: SaveSMSConfig saves or updates the SMS configuration for the team
            operationId: Team_SaveSMSConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveSMSConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/sms/configs:
        post:
            tags:
                - Team
            description: GetSMSConfigs retrieves the SMS configuration for the team
            operationId: Team_GetSMSConfigs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetSMSConfigsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetSMSConfigsReply'
    /api/team/strategy:
        post:
            tags:
                - TeamStrategy
            description: SaveTeamStrategy saves a new team strategy or updates an existing one
            operationId: TeamStrategy_SaveTeamStrategy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamStrategyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamStrategy
            description: DeleteTeamStrategy deletes a team strategy by Id
            operationId: TeamStrategy_DeleteTeamStrategy
            parameters:
                - name: strategyId
                  in: query
                  description: Strategy id
                  schema:
                    type: integer
                    format: uint32
                - name: strategyType
                  in: query
                  description: strategy type
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/group:
        get:
            tags:
                - TeamStrategy
            description: GetTeamStrategyGroup retrieves a team strategy group by Id
            operationId: TeamStrategy_GetTeamStrategyGroup
            parameters:
                - name: groupId
                  in: query
                  description: Strategy group Id
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.TeamStrategyGroupItem'
        post:
            tags:
                - TeamStrategy
            description: SaveTeamStrategyGroup saves a new team strategy group or updates an existing one
            operationId: TeamStrategy_SaveTeamStrategyGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamStrategyGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamStrategy
            description: DeleteTeamStrategyGroup deletes a team strategy group by Id
            operationId: TeamStrategy_DeleteTeamStrategyGroup
            parameters:
                - name: groupId
                  in: query
                  description: Strategy group Id
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/group/list:
        post:
            tags:
                - TeamStrategy
            description: ListTeamStrategyGroup lists team strategy groups based on specified filters
            operationId: TeamStrategy_ListTeamStrategyGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamStrategyGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamStrategyGroupReply'
    /api/team/strategy/group/status:
        put:
            tags:
                - TeamStrategy
            description: UpdateTeamStrategyGroupStatus updates the status of a team strategy group
            operationId: TeamStrategy_UpdateTeamStrategyGroupStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamStrategyGroupStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/list:
        post:
            tags:
                - TeamStrategy
            description: ListTeamStrategy lists team strategies based on specified filters
            operationId: TeamStrategy_ListTeamStrategy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamStrategyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamStrategyReply'
    /api/team/strategy/metric:
        get:
            tags:
                - TeamStrategy
            description: GetTeamStrategy retrieves a team strategy by Id
            operationId: TeamStrategy_GetTeamMetricStrategy
            parameters:
                - name: strategyId
                  in: query
                  description: Strategy id
                  schema:
                    type: integer
                    format: uint32
                - name: strategyType
                  in: query
                  description: strategy type
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.TeamStrategyMetricItem'
        post:
            tags:
                - TeamStrategy
            description: SaveTeamMetricStrategy saves a new team metric strategy or updates an existing one
            operationId: TeamStrategy_SaveTeamMetricStrategy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamMetricStrategyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/metric/levels:
        post:
            tags:
                - TeamStrategy
            description: SaveTeamMetricStrategyLevels saves a new team metric strategy level or updates an existing one
            operationId: TeamStrategy_SaveTeamMetricStrategyLevels
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamMetricStrategyLevelsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.SaveTeamMetricStrategyLevelsReply'
    /api/team/strategy/status:
        put:
            tags:
                - TeamStrategy
            description: UpdateTeamStrategiesStatus updates the status of multiple team strategies
            operationId: TeamStrategy_UpdateTeamStrategiesStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamStrategiesStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/subscribe:
        post:
            tags:
                - TeamStrategy
            description: SubscribeTeamStrategy subscribes or unsubscribes from a team strategy
            operationId: TeamStrategy_SubscribeTeamStrategy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SubscribeTeamStrategyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/subscribe/list:
        post:
            tags:
                - TeamStrategy
            description: SubscribeTeamStrategies subscribes or unsubscribes from multiple team strategies
            operationId: TeamStrategy_SubscribeTeamStrategies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SubscribeTeamStrategiesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.SubscribeTeamStrategiesReply'
    /api/team/transfer:
        post:
            tags:
                - Team
            description: TransferTeam transfers the leadership of the team to a new leader
            operationId: Team_TransferTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.TransferTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/update/member/position:
        post:
            tags:
                - Team
            description: UpdateMemberPosition updates the position of a team member
            operationId: Team_UpdateMemberPosition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateMemberPositionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/update/member/roles:
        post:
            tags:
                - Team
            description: UpdateMemberRoles updates the roles assigned to multiple team members
            operationId: Team_UpdateMemberRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateMemberRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/update/member/status:
        post:
            tags:
                - Team
            description: UpdateMemberStatus updates the status of multiple team members
            operationId: Team_UpdateMemberStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateMemberStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self:
        get:
            tags:
                - User
            description: SelfInfo retrieves the current user's information
            operationId: User_SelfInfo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.UserItem'
        put:
            tags:
                - User
            description: UpdateSelfInfo updates the current user's information
            operationId: User_UpdateSelfInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateSelfInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/create-team:
        post:
            tags:
                - User
            description: CreateTeam allows the current user to create a new team
            operationId: User_CreateTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.CreateTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/join-team:
        post:
            tags:
                - User
            description: JoinTeam allows the current user to join a team
            operationId: User_JoinTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.JoinTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/leave-team:
        post:
            tags:
                - User
            description: LeaveTeam allows the current user to leave a team
            operationId: User_LeaveTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.LeaveTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/password:
        put:
            tags:
                - User
            description: UpdateSelfPassword updates the current user's password
            operationId: User_UpdateSelfPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateSelfPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/subscribe/team/strategies:
        post:
            tags:
                - User
            description: SelfSubscribeTeamStrategies retrieves the list of team strategies the current user is subscribed to
            operationId: User_SelfSubscribeTeamStrategies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SelfSubscribeTeamStrategiesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.SelfSubscribeTeamStrategiesReply'
    /api/user/self/team-list:
        get:
            tags:
                - User
            description: SelfTeamList retrieves the list of teams the current user is a member of
            operationId: User_SelfTeamList
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.SelfTeamListReply'
    /health:
        get:
            tags:
                - Health
            operationId: Health_Check
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.common.CheckReply'
    /v1/server/register:
        post:
            tags:
                - Server
            operationId: Server_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.common.ServerRegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.common.ServerRegisterReply'
    /v1/server/send/msg/callback:
        post:
            tags:
                - Callback
            operationId: Callback_SendMsgCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SendMsgCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.SendMsgCallbackReply'
    /v1/server/sync/metadata:
        post:
            tags:
                - Callback
            operationId: Callback_SyncMetadata
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SyncMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.SyncMetadataReply'
components:
    schemas:
        api.common.AlertItem:
            type: object
            properties:
                status:
                    type: integer
                    description: status of the alert
                    format: enum
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: labels of the alert
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: annotations of the alert
                startsAt:
                    type: string
                    description: startsAt of the alert
                endsAt:
                    type: string
                    description: endsAt of the alert
                generatorURL:
                    type: string
                    description: generatorURL of the alert
                fingerprint:
                    type: string
                    description: fingerprint of the alert
                value:
                    type: string
                    description: value of the alert
        api.common.CheckReply:
            type: object
            properties:
                healthy:
                    type: boolean
                version:
                    type: string
                time:
                    type: string
        api.common.MetricDatasourceQueryReply:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.MetricQueryResult'
        api.common.MetricItem:
            type: object
            properties:
                name:
                    type: string
                help:
                    type: string
                type:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                unit:
                    type: string
        api.common.MetricQueryResult:
            type: object
            properties:
                metric:
                    type: object
                    additionalProperties:
                        type: string
                value:
                    $ref: '#/components/schemas/api.common.MetricQueryResultValue'
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.MetricQueryResultValue'
        api.common.MetricQueryResultValue:
            type: object
            properties:
                timestamp:
                    type: string
                value:
                    type: number
                    format: double
        api.common.ServerRegisterReply:
            type: object
            properties: {}
        api.common.ServerRegisterRequest:
            type: object
            properties:
                serverType:
                    type: integer
                    format: enum
                server:
                    $ref: '#/components/schemas/config.MicroServer'
                discovery:
                    $ref: '#/components/schemas/config.Discovery'
                teamIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                isOnline:
                    type: boolean
                uuid:
                    type: string
        api.palace.BatchUpdateResourceStatusRequest:
            type: object
            properties:
                resourceIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of resource Ids to update
                status:
                    type: integer
                    description: New status for the resources
                    format: enum
            description: BatchUpdateResourceStatusRequest represents the request data for updating the status of multiple resources
        api.palace.CaptchaValidateRequest:
            type: object
            properties:
                captchaId:
                    type: string
                    description: Captcha Id, used to identify the captcha image
                answer:
                    type: string
                    description: User's captcha answer
            description: CaptchaValidateRequest is used to validate the captcha
        api.palace.CreateTeamRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Team name
                remark:
                    type: string
                    description: Team remark or description
                logo:
                    type: string
                    description: Team logo URL
            description: CreateTeamRequest represents the request data for creating a new team
        api.palace.EmailConfigItem:
            type: object
            properties:
                user:
                    type: string
                    description: Email user
                pass:
                    type: string
                    description: Email password
                host:
                    type: string
                    description: Email server host
                port:
                    type: integer
                    description: Email server port
                    format: uint32
                status:
                    type: integer
                    description: Enable email configuration
                    format: enum
                name:
                    type: string
                    description: Name of the email configuration
                remark:
                    type: string
                    description: Remark of the email configuration
                emailConfigId:
                    type: integer
                    description: emailConfigId of the email configuration
                    format: uint32
            description: EmailConfigItem represents the structure of an email configuration
        api.palace.GetCaptchaReply:
            type: object
            properties:
                captchaId:
                    type: string
                    description: Unique identifier for the captcha
                captchaImg:
                    type: string
                    description: Base64 encoded captcha image data
                expiredSeconds:
                    type: integer
                    description: Captcha expiration time in seconds
                    format: int32
            description: GetCaptchaReply contains the response data for the GetCaptcha method
        api.palace.GetEmailConfigsReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.EmailConfigItem'
                    description: List of email configuration items
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
            description: GetEmailConfigReply contains the response data for retrieving the email configuration
        api.palace.GetEmailConfigsRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                keyword:
                    type: string
                    description: Keyword to search email configurations by
                status:
                    type: integer
                    description: Status to filter email configurations by
                    format: enum
            description: GetEmailConfigsRequest represents the request data for retrieving the email configuration
        api.palace.GetFilingInformationReply:
            type: object
            properties:
                url:
                    type: string
                    description: URL of the filing information
                filingInformation:
                    type: string
                    description: Filing information
            description: GetFilingInformationReply contains the response data for getting the filing information
        api.palace.GetResourceMenuTreeReply:
            type: object
            properties:
                menus:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.MenuTreeItem'
                    description: List of menu items
            description: GetMenuTreeReply contains the response data for retrieving the menu tree
        api.palace.GetSMSConfigsReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.SMSConfigItem'
                    description: List of SMS configuration items
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
            description: GetSMSConfigsReply contains the response data for retrieving the SMS configuration
        api.palace.GetSMSConfigsRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                keyword:
                    type: string
                    description: Keyword to search SMS configurations by
                status:
                    type: integer
                    description: Status to filter SMS configurations by
                    format: enum
                provider:
                    type: integer
                    description: Provider to filter SMS configurations by
                    format: enum
            description: GetSMSConfigsRequest represents the request data for retrieving the SMS configuration
        api.palace.GetSelfMenuTreeReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.MenuTreeItem'
                    description: Menu tree data
            description: GetSelfMenuTreeReply contains the response data for getting the menu tree
        api.palace.GetSendMessageLogsReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.SendMessageLogItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.GetSendMessageLogsRequest:
            type: object
            properties:
                requestId:
                    type: string
                message:
                    type: string
                messageType:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                keyword:
                    type: string
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
        api.palace.GetSystemRolesReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.SystemRoleItem'
                    description: List of system role items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: GetSystemRolesReply contains the response data for listing system roles
        api.palace.GetSystemRolesRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                keyword:
                    type: string
                    description: Keyword to search roles by
                status:
                    type: integer
                    description: Status to filter roles by
                    format: enum
            description: GetSystemRolesRequest represents the request data for listing system roles
        api.palace.GetTeamAuditListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamAuditItem'
                    description: List of team audit items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: GetTeamAuditListReply contains the response data for listing team audit records
        api.palace.GetTeamAuditListRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: List of statuses to filter team audit records by
                keyword:
                    type: string
                    description: Keyword to search team audit records by
                userId:
                    type: integer
                    description: User Id, optional for filtering audits by user
                    format: uint32
                actions:
                    type: array
                    items:
                        type: integer
                        format: enum
            description: GetTeamAuditListRequest represents the request data for listing team audit records
        api.palace.GetTeamListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamItem'
                    description: List of team items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: GetTeamListReply contains the response data for listing teams
        api.palace.GetTeamListRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: List of statuses to filter teams by
                keyword:
                    type: string
                    description: Keyword to search teams by
                leaderId:
                    type: integer
                    format: uint32
                creatorId:
                    type: integer
                    format: uint32
            description: GetTeamListRequest represents the request data for listing teams
        api.palace.GetTeamMembersReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamMemberItem'
                    description: List of team member items
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
            description: GetTeamMembersReply contains the response data for retrieving team members
        api.palace.GetTeamMembersRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                keyword:
                    type: string
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
                positions:
                    type: array
                    items:
                        type: integer
                        format: enum
        api.palace.GetTeamResourcesReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.ResourceItem'
                    description: List of resource items associated with the team
            description: GetTeamResourcesReply contains the response data for retrieving team resources
        api.palace.GetTeamRolesReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamRoleItem'
                    description: List of team role items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: GetTeamRolesReply contains the response data for retrieving team roles
        api.palace.GetTeamRolesRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                keyword:
                    type: string
                    description: Keyword to search roles by
                status:
                    type: integer
                    description: Status to filter roles by
                    format: enum
            description: GetTeamRolesRequest represents the request data for retrieving team roles
        api.palace.GetTeamSendMessageLogsReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.SendMessageLogItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.GetTeamSendMessageLogsRequest:
            type: object
            properties:
                requestId:
                    type: string
                message:
                    type: string
                messageType:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                keyword:
                    type: string
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
        api.palace.GetUserListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.UserItem'
                    description: List of user items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: GetUserListReply contains the response data for listing users
        api.palace.GetUserListRequest:
            type: object
            properties:
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: List of statuses to filter users by
                position:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: List of positions to filter users by
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                keyword:
                    type: string
                    description: Keyword to search users by
            description: GetUserListRequest represents the request data for listing users
        api.palace.InviteMemberRequest:
            type: object
            properties:
                userEmail:
                    type: string
                    description: Email of the user to invite
                position:
                    type: integer
                    description: Position of the new member
                    format: enum
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of role Ids to assign to the new member
            description: InviteMemberRequest represents the request data for inviting a new member to the team
        api.palace.JoinTeamRequest:
            type: object
            properties:
                teamName:
                    type: string
                    description: Team name to join
                reason:
                    type: string
                    description: Reason for joining the team
            description: JoinTeamRequest represents the request data for joining a team
        api.palace.LabelNotices:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
                receiverRoutes:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.LeaveTeamRequest:
            type: object
            properties:
                teamId:
                    type: integer
                    description: Team Id to leave
                    format: uint32
                reason:
                    type: string
                    description: Reason for leaving the team
            description: LeaveTeamRequest represents the request data for leaving a team
        api.palace.ListAlertParams:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                timeRange:
                    type: array
                    items:
                        type: string
                fingerprint:
                    type: string
                keyword:
                    type: string
                status:
                    type: integer
                    format: enum
        api.palace.ListAlertReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.RealtimeAlertItem'
        api.palace.ListResourceReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.ResourceItem'
                    description: List of resource items
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
            description: ListResourceReply contains the response data for listing resources
        api.palace.ListResourceRequest:
            type: object
            properties:
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: List of statuses to filter resources by
                keyword:
                    type: string
                    description: Keyword to search resources by
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
            description: ListResourceRequest represents the request data for listing resources
        api.palace.ListTeamDashboardChartReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamDashboardChartItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.ListTeamDashboardChartRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                dashboardId:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
                keyword:
                    type: string
        api.palace.ListTeamDashboardReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamDashboardItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.ListTeamDashboardRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                status:
                    type: integer
                    format: enum
                keyword:
                    type: string
        api.palace.ListTeamDictReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamDictItem'
        api.palace.ListTeamDictRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                dictTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                status:
                    type: integer
                    format: enum
                keyword:
                    type: string
                langs:
                    type: array
                    items:
                        type: string
        api.palace.ListTeamMetricDatasourceReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamMetricDatasourceItem'
        api.palace.ListTeamMetricDatasourceRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                keyword:
                    type: string
                status:
                    type: integer
                    format: enum
                driver:
                    type: integer
                    format: enum
        api.palace.ListTeamNoticeGroupReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.NoticeGroupItem'
        api.palace.ListTeamNoticeGroupRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                memberIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
                keyword:
                    type: string
                hookIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.ListTeamNoticeHookReply:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.NoticeHookItem'
        api.palace.ListTeamNoticeHookRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                apps:
                    type: array
                    items:
                        type: integer
                        format: enum
                status:
                    type: integer
                    format: enum
                keyword:
                    type: string
                url:
                    type: string
        api.palace.ListTeamStrategyGroupReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamStrategyGroupItem'
                    description: List of strategy group items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: ListTeamStrategyGroupReply contains the response data for listing team strategy groups
        api.palace.ListTeamStrategyGroupRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                keyword:
                    type: string
                    description: Keyword to search strategy groups by
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: List of statuses to filter strategy groups by
            description: ListTeamStrategyGroupRequest represents the request data for listing team strategy groups
        api.palace.ListTeamStrategyReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamStrategyItem'
                    description: List of strategy items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
        api.palace.ListTeamStrategyRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                keyword:
                    type: string
                    description: Keyword to search strategies by
                status:
                    type: integer
                    description: List of statuses to filter strategies by
                    format: enum
                groupIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: Group id
                strategyTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: Strategy type
        api.palace.LoginByEmailRequest:
            type: object
            properties:
                username:
                    type: string
                    description: Username, not email
                email:
                    type: string
                    description: User email
                code:
                    type: string
                    description: Email verification code
                nickname:
                    type: string
                    description: User nickname, optional
                remark:
                    type: string
                    description: Remark, for additional information
                gender:
                    type: integer
                    description: User gender, optional
                    format: enum
            description: LoginByEmailRequest represents the request data for logging in with email verification code
        api.palace.LoginByPasswordRequest:
            type: object
            properties:
                email:
                    type: string
                    description: User email
                password:
                    type: string
                    description: User password
                captcha:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.CaptchaValidateRequest'
                    description: Captcha validation information
            description: LoginByPasswordRequest represents the request data for logging in with password
        api.palace.LoginReply:
            type: object
            properties:
                token:
                    type: string
                    description: Login token
                expiredSeconds:
                    type: integer
                    description: Token expiration time in seconds
                    format: int32
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: User basic information
            description: LoginReply contains the response data for successful login
        api.palace.LogoutReply:
            type: object
            properties:
                redirect:
                    type: string
                    description: Redirect URL after logout, if any
            description: LogoutReply contains the response data for successful logout
        api.palace.LogoutRequest:
            type: object
            properties:
                redirect:
                    type: string
                    description: Redirect URL after logout, optional
            description: LogoutRequest represents the request data for logging out
        api.palace.MetricDatasourceQueryRequest:
            type: object
            properties:
                datasourceId:
                    type: integer
                    format: uint32
                expr:
                    type: string
                time:
                    type: string
                startTime:
                    type: string
                endTime:
                    type: string
                step:
                    type: integer
                    format: uint32
        api.palace.OAuth2ListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.OAuth2ListReply_OAuthItem'
                    description: List of OAuth2.0 providers
            description: OAuth2ListReply contains the list of supported OAuth2.0 providers
        api.palace.OAuth2ListReply_OAuthItem:
            type: object
            properties:
                icon:
                    type: string
                    description: Provider icon URL
                label:
                    type: string
                    description: Provider label or name
                redirect:
                    type: string
                    description: Provider redirect URL
            description: OAuth2.0 provider information item
        api.palace.OAuthLoginByEmailRequest:
            type: object
            properties:
                openId:
                    type: string
                    description: OAuth2.0 provider Id
                email:
                    type: string
                    description: User email
                code:
                    type: string
                    description: OAuth2.0 authorization code
                token:
                    type: string
                    description: OAuth2.0 token
                app:
                    type: integer
                    description: Application Id, to identify the application
                    format: int32
            description: OAuthLoginByEmailRequest represents the request data for OAuth2.0 login with email
        api.palace.OperateLogListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.OperateLogItem'
                    description: List of operation log items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: OperateLogListReply contains the response data for listing operation logs
        api.palace.OperateLogListRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                operateTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: List of types to filter operation logs by
                keyword:
                    type: string
                    description: Keyword to search operation logs by
                userId:
                    type: integer
                    description: User Id, optional for filtering logs by user
                    format: uint32
            description: OperateLogListRequest represents the request data for listing operation logs
        api.palace.OperateOneSendMessageRequest:
            type: object
            properties:
                requestId:
                    type: string
        api.palace.OperateOneTeamSendMessageRequest:
            type: object
            properties:
                requestId:
                    type: string
        api.palace.RealtimeAlertItem:
            type: object
            properties:
                alertId:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
                fingerprint:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                summary:
                    type: string
                description:
                    type: string
                value:
                    type: string
                generatorURL:
                    type: string
                startsAt:
                    type: string
                endsAt:
                    type: string
        api.palace.RemoveMemberRequest:
            type: object
            properties:
                memberId:
                    type: integer
                    format: uint32
            description: RemoveMemberRequest represents the request data for removing a member from the team
        api.palace.ReplaceMemberRoleRequest:
            type: object
            properties:
                memberId:
                    type: integer
                    format: uint32
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
            description: ReplaceMemberRoleRequest represents the request data for replacing a member's role
        api.palace.ReplaceUserRoleRequest:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
            description: ReplaceUserRoleRequest represents the request data for replacing a user's role
        api.palace.ResetUserPasswordRequest:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
            description: ResetUserPasswordRequest represents the request data for resetting user passwords
        api.palace.SMSConfigItem:
            type: object
            properties:
                providerType:
                    type: integer
                    description: SMS provider type
                    format: enum
                accessKeyId:
                    type: string
                    description: Access Key Id for the SMS provider
                accessKeySecret:
                    type: string
                    description: Access Key Secret for the SMS provider
                signName:
                    type: string
                    description: Sign name for the SMS provider
                endpoint:
                    type: string
                    description: Endpoint for the SMS provider
                name:
                    type: string
                    description: Name of the SMS configuration
                remark:
                    type: string
                    description: Remark of the SMS configuration
                smsConfigId:
                    type: integer
                    description: smsConfigId of the SMS configuration
                    format: uint32
                status:
                    type: integer
                    description: Enable SMS configuration
                    format: enum
            description: SMSConfigItem represents the structure of an SMS configuration
        api.palace.SaveEmailConfigRequest:
            type: object
            properties:
                user:
                    type: string
                    description: Email user
                pass:
                    type: string
                    description: Email password
                host:
                    type: string
                    description: Email server host
                port:
                    type: integer
                    description: Email server port
                    format: uint32
                status:
                    type: integer
                    description: Enable email configuration
                    format: enum
                name:
                    type: string
                    description: Name of the email configuration
                remark:
                    type: string
                    description: Remark of the email configuration
                emailConfigId:
                    type: integer
                    description: emailConfigId of the email configuration
                    format: uint32
            description: SaveEmailConfigRequest represents the request data for saving or updating the email configuration
        api.palace.SaveMenuRequest:
            type: object
            properties:
                menuId:
                    type: integer
                    description: Id of the menu (0 for create, >0 for update)
                    format: uint32
                name:
                    type: string
                    description: Name of the menu
                path:
                    type: string
                    description: Path of the menu
                status:
                    type: integer
                    description: Status of the menu
                    format: enum
                icon:
                    type: string
                    description: Icon of the menu
                parentId:
                    type: integer
                    description: Parent menu Id (0 for root menu)
                    format: uint32
                menuType:
                    type: integer
                    description: Type of the menu
                    format: enum
                resourceIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
            description: SaveMenuRequest represents the request data for creating or updating a system menu
        api.palace.SaveResourceRequest:
            type: object
            properties:
                resourceId:
                    type: integer
                    description: Id of the resource (0 for create, >0 for update)
                    format: uint32
                name:
                    type: string
                    description: Name of the resource
                path:
                    type: string
                    description: Path of the resource
                status:
                    type: integer
                    description: Status of the resource
                    format: enum
                allow:
                    type: integer
                    description: Allow rule for the resource
                    format: enum
                remark:
                    type: string
                    description: Remark for the resource
            description: SaveResourceRequest represents the request data for creating or updating a resource
        api.palace.SaveRoleRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    description: Role Id, optional for new roles
                    format: uint32
                name:
                    type: string
                    description: Role name
                remark:
                    type: string
                    description: Role remark or description
                menuIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of resource Ids associated with the role
            description: SaveRoleRequest represents the request data for saving or updating a role
        api.palace.SaveSMSConfigRequest:
            type: object
            properties:
                provider:
                    type: integer
                    description: SMS provider type
                    format: enum
                accessKeyId:
                    type: string
                    description: Access Key Id for the SMS provider
                accessKeySecret:
                    type: string
                    description: Access Key Secret for the SMS provider
                signName:
                    type: string
                    description: Sign name for the SMS provider
                endpoint:
                    type: string
                    description: Endpoint for the SMS provider
                name:
                    type: string
                    description: Name of the SMS configuration
                remark:
                    type: string
                    description: Remark of the SMS configuration
                status:
                    type: integer
                    description: Enable SMS configuration
                    format: enum
                smsConfigId:
                    type: integer
                    description: smsConfigId of the SMS configuration
                    format: uint32
            description: SaveSMSConfigRequest represents the request data for saving or updating the SMS configuration
        api.palace.SaveTeamDashboardChartRequest:
            type: object
            properties:
                dashboardId:
                    type: integer
                    format: uint32
                chartId:
                    type: integer
                    format: uint32
                title:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                url:
                    type: string
                width:
                    type: string
                height:
                    type: string
        api.palace.SaveTeamDashboardRequest:
            type: object
            properties:
                dashboardId:
                    type: integer
                    format: uint32
                title:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                colorHex:
                    type: string
        api.palace.SaveTeamDictRequest:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
                lang:
                    type: string
                color:
                    type: string
                dictType:
                    type: integer
                    format: enum
                dictId:
                    type: integer
                    format: uint32
        api.palace.SaveTeamMetricDatasourceRequest:
            type: object
            properties:
                metricDatasourceDriver:
                    type: integer
                    format: enum
                datasourceId:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
                endpoint:
                    type: string
                scrapeInterval:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                headers:
                    type: object
                    additionalProperties:
                        type: string
                queryMethod:
                    type: integer
                    format: enum
                ca:
                    type: string
                tls:
                    $ref: '#/components/schemas/api.palace.common.TLS'
                basicAuth:
                    $ref: '#/components/schemas/api.palace.common.BasicAuth'
                extra:
                    type: object
                    additionalProperties:
                        type: string
        api.palace.SaveTeamMetricStrategyLevelRequest:
            type: object
            properties:
                levelId:
                    type: integer
                    description: Level Id
                    format: uint32
                levelName:
                    type: string
                    description: Level name
                sampleMode:
                    type: integer
                    description: Sample mode
                    format: enum
                total:
                    type: string
                    description: Total
                condition:
                    type: integer
                    description: Condition
                    format: enum
                values:
                    type: array
                    items:
                        type: number
                        format: double
                    description: Values
                receiverRoutes:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: Receiver routes
                labelNotices:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.LabelNotices'
                    description: Label notices
                duration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: Duration
                status:
                    type: integer
                    description: Status
                    format: enum
                strategyMetricLevelId:
                    type: integer
                    description: Id
                    format: uint32
                alarmPages:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: alarm pages
        api.palace.SaveTeamMetricStrategyLevelsReply:
            type: object
            properties:
                levels:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamStrategyMetricItem_RuleItem'
                    description: Levels
                message:
                    type: string
        api.palace.SaveTeamMetricStrategyLevelsRequest:
            type: object
            properties:
                strategyMetricId:
                    type: integer
                    description: Strategy metric id
                    format: uint32
                levels:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.SaveTeamMetricStrategyLevelRequest'
                    description: Levels
        api.palace.SaveTeamMetricStrategyRequest:
            type: object
            properties:
                strategyId:
                    type: integer
                    description: Strategy id
                    format: uint32
                metricStrategyId:
                    type: integer
                    description: Metric strategy id
                    format: uint32
                expr:
                    type: string
                    description: Expression
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: Labels
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: Annotations
                datasource:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: Datasource
            description: SaveTeamMetricStrategyRequest represents the request data for saving or updating a team metric strategy
        api.palace.SaveTeamNoticeGroupRequest:
            type: object
            properties:
                name:
                    type: string
                remark:
                    type: string
                hookIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.SaveTeamNoticeGroupRequest_Member'
                groupId:
                    type: integer
                    format: uint32
                emailConfigId:
                    type: integer
                    format: uint32
                smsConfigId:
                    type: integer
                    format: uint32
        api.palace.SaveTeamNoticeGroupRequest_Member:
            type: object
            properties:
                memberId:
                    type: integer
                    format: uint32
                noticeType:
                    type: integer
                    format: enum
        api.palace.SaveTeamNoticeHookRequest:
            type: object
            properties:
                name:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                url:
                    type: string
                secret:
                    type: string
                method:
                    type: integer
                    format: enum
                headers:
                    type: object
                    additionalProperties:
                        type: string
                app:
                    type: integer
                    format: enum
                hookId:
                    type: integer
                    format: uint32
        api.palace.SaveTeamRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Team name
                remark:
                    type: string
                    description: Team remark or description
                logo:
                    type: string
                    description: Team logo URL
                teamId:
                    type: integer
                    format: uint32
            description: SaveTeamRequest represents the request data for saving or updating a team
        api.palace.SaveTeamRoleRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    description: Role Id, optional for new roles
                    format: uint32
                name:
                    type: string
                    description: Role name
                remark:
                    type: string
                    description: Role remark or description
                menuIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of resource Ids associated with the role
            description: SaveTeamRoleRequest represents the request data for saving or updating a team role
        api.palace.SaveTeamStrategyGroupRequest:
            type: object
            properties:
                groupId:
                    type: integer
                    description: Strategy group Id, optional for new groups
                    format: uint32
                name:
                    type: string
                    description: Strategy group name
                remark:
                    type: string
                    description: Strategy group remark or description
            description: SaveTeamStrategyGroupRequest represents the request data for saving or updating a team strategy group
        api.palace.SaveTeamStrategyRequest:
            type: object
            properties:
                strategyId:
                    type: integer
                    description: Strategy item Id, optional for new items
                    format: uint32
                name:
                    type: string
                    description: Strategy item name
                remark:
                    type: string
                    description: Strategy item remark or description
                strategyType:
                    type: integer
                    description: Strategy item type
                    format: enum
                receiverRoutes:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: Receiver routes
                groupId:
                    type: integer
                    description: Group id
                    format: uint32
        api.palace.SelfSubscribeTeamStrategiesReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamStrategyItem'
                    description: List of team strategy items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: SelfSubscribeTeamStrategiesReply contains the response data for retrieving subscribed team strategies
        api.palace.SelfSubscribeTeamStrategiesRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
            description: SelfSubscribeTeamStrategiesRequest represents the request data for retrieving subscribed team strategies
        api.palace.SelfTeamListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamItem'
                    description: List of team items
            description: SelfTeamListReply contains the response data for retrieving the list of teams the current user is a member of
        api.palace.SendMsgCallbackReply:
            type: object
            properties:
                code:
                    type: integer
                    description: Code of the reply 0 is success, other is failed
                    format: int32
                msg:
                    type: string
                    description: Message of the reply, only when code is not 0, it is not empty
        api.palace.SendMsgCallbackRequest:
            type: object
            properties:
                requestId:
                    type: string
                code:
                    type: integer
                    description: Code of the callback 0 is success, other is failed
                    format: int32
                msg:
                    type: string
                    description: Message of the callback, only when code is not 0, it is not empty
                teamId:
                    type: integer
                    format: uint32
        api.palace.SubscribeTeamStrategiesReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.SubscriberItem'
                    description: subscribers
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: pagination
        api.palace.SubscribeTeamStrategiesRequest:
            type: object
            properties:
                strategyId:
                    type: integer
                    description: Strategy id
                    format: uint32
                subscribers:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: subscribers
                subscribeType:
                    type: integer
                    description: subscribe type
                    format: enum
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
        api.palace.SubscribeTeamStrategyRequest:
            type: object
            properties:
                strategyId:
                    type: integer
                    description: Strategy id
                    format: uint32
                subscribeType:
                    type: integer
                    description: subscribe type
                    format: enum
        api.palace.SyncMetadataReply:
            type: object
            properties:
                code:
                    type: integer
                    description: Code of the reply 0 is success, other is failed
                    format: int32
                msg:
                    type: string
                    description: Message of the reply, only when code is not 0, it is not empty
        api.palace.SyncMetadataRequest:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.MetricItem'
                isDone:
                    type: boolean
                operatorId:
                    type: integer
                    format: uint32
                teamId:
                    type: integer
                    format: uint32
                datasourceId:
                    type: integer
                    format: uint32
        api.palace.SyncMetricMetadataRequest:
            type: object
            properties:
                datasourceId:
                    type: integer
                    format: uint32
        api.palace.TeamOperateLogListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.OperateLogItem'
                    description: List of operation log items
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationReply'
                    description: Pagination response details
            description: OperateLogListReply contains the response data for listing operation logs
        api.palace.TeamOperateLogListRequest:
            type: object
            properties:
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                    description: Pagination request details
                operateTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: List of types to filter operation logs by
                keyword:
                    type: string
                    description: Keyword to search operation logs by
                userId:
                    type: integer
                    description: User Id, optional for filtering logs by user
                    format: uint32
            description: OperateLogListRequest represents the request data for listing operation logs
        api.palace.TransferTeamRequest:
            type: object
            properties:
                newLeaderId:
                    type: integer
                    description: New leader's user Id
                    format: uint32
            description: TransferTeamRequest represents the request data for transferring team leadership
        api.palace.UpdateMemberPositionRequest:
            type: object
            properties:
                memberId:
                    type: integer
                    description: Member Id
                    format: uint32
                position:
                    type: integer
                    description: New position for the member
                    format: enum
            description: UpdateMemberPositionRequest represents the request data for updating a member's position
        api.palace.UpdateMemberRolesRequest:
            type: object
            properties:
                memberId:
                    type: integer
                    description: List of member Ids to update
                    format: uint32
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of role Ids to assign to the members
            description: UpdateMemberRolesRequest represents the request data for updating the roles of multiple members
        api.palace.UpdateMemberStatusRequest:
            type: object
            properties:
                memberIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of member Ids to update
                status:
                    type: integer
                    description: New status for the members
                    format: enum
            description: UpdateMemberStatusRequest represents the request data for updating the status of multiple members
        api.palace.UpdateRoleStatusRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    description: Role Id
                    format: uint32
                status:
                    type: integer
                    description: New status for the role
                    format: enum
            description: UpdateRoleStatusRequest represents the request data for updating role status
        api.palace.UpdateRoleUsersRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    description: Role Id
                    format: uint32
                userIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of user Ids to assign to the role
            description: UpdateRoleUsersRequest represents the request data for updating role users
        api.palace.UpdateSelfInfoRequest:
            type: object
            properties:
                nickname:
                    type: string
                    description: User nickname
                avatar:
                    type: string
                    description: User avatar URL
                gender:
                    type: integer
                    description: User gender
                    format: enum
            description: UpdateSelfInfoRequest represents the request data for updating the current user's information
        api.palace.UpdateSelfPasswordRequest:
            type: object
            properties:
                oldPassword:
                    type: string
                    description: Current password
                newPassword:
                    type: string
                    description: New password
            description: UpdateSelfPasswordRequest represents the request data for updating the current user's password
        api.palace.UpdateTeamAuditStatusRequest:
            type: object
            properties:
                auditId:
                    type: integer
                    description: Audit Id
                    format: uint32
                status:
                    type: integer
                    description: New status for the team audit record
                    format: enum
                reason:
                    type: string
                    description: Reason for the status update
            description: UpdateTeamAuditStatusRequest represents the request data for updating team audit status
        api.palace.UpdateTeamDashboardChartStatusRequest:
            type: object
            properties:
                dashboardId:
                    type: integer
                    format: uint32
                chartIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateTeamDashboardStatusRequest:
            type: object
            properties:
                dashboardIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateTeamDictStatusRequest:
            type: object
            properties:
                dictIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateTeamMetricDatasourceStatusRequest:
            type: object
            properties:
                datasourceId:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateTeamNoticeGroupStatusRequest:
            type: object
            properties:
                groupId:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateTeamNoticeHookStatusRequest:
            type: object
            properties:
                hookId:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateTeamRoleStatusRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    description: Role Id
                    format: uint32
                status:
                    type: integer
                    description: New status for the role
                    format: enum
            description: UpdateTeamRoleStatusRequest represents the request data for updating role status
        api.palace.UpdateTeamStrategiesStatusRequest:
            type: object
            properties:
                strategyIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: Strategy ids
                status:
                    type: integer
                    description: Status
                    format: enum
        api.palace.UpdateTeamStrategyGroupStatusRequest:
            type: object
            properties:
                groupId:
                    type: integer
                    description: Strategy group Id
                    format: uint32
                status:
                    type: integer
                    description: New status for the strategy group
                    format: enum
            description: UpdateTeamStrategyGroupStatusRequest represents the request data for updating the status of a team strategy group
        api.palace.UpdateUserPositionRequest:
            type: object
            properties:
                userId:
                    type: integer
                    description: User Id
                    format: uint32
                position:
                    type: integer
                    description: New position for the user
                    format: enum
            description: UpdateUserPositionRequest represents the request data for updating user position
        api.palace.UpdateUserRequest:
            type: object
            properties:
                userId:
                    type: integer
                    description: User Id
                    format: uint32
                nickname:
                    type: string
                    description: User nickname
                avatar:
                    type: string
                    description: User avatar URL
                gender:
                    type: integer
                    description: User gender
                    format: enum
            description: UpdateUserRequest represents the request data for updating user information
        api.palace.UpdateUserRolesRequest:
            type: object
            properties:
                userId:
                    type: integer
                    description: User Id
                    format: uint32
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of role Ids to assign to the user
            description: UpdateUserRolesRequest represents the request data for updating user roles
        api.palace.UpdateUserStatusRequest:
            type: object
            properties:
                userIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                    description: List of user Ids to update
                status:
                    type: integer
                    description: New status for the users
                    format: enum
            description: UpdateUserStatusRequest represents the request data for updating user status
        api.palace.VerifyEmailReply:
            type: object
            properties:
                expiredSeconds:
                    type: integer
                    description: Email verification code expiration time in seconds
                    format: int32
            description: VerifyEmailReply contains the response data for successful email verification
        api.palace.VerifyEmailRequest:
            type: object
            properties:
                email:
                    type: string
                    description: Email to verify
                captcha:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.CaptchaValidateRequest'
                    description: Captcha validation information
            description: VerifyEmailRequest represents the request data for email verification
        api.palace.common.BasicAuth:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        api.palace.common.EmptyReply:
            type: object
            properties:
                message:
                    type: string
                id:
                    type: integer
                    format: uint32
            description: |-
                EmptyReply represents an empty response, typically used for operations that only need to return a status message.
                 message: A string message, usually used to indicate the execution status.
        api.palace.common.EmptyRequest:
            type: object
            properties: {}
            description: EmptyRequest represents an empty request, typically used for operations that do not require input parameters.
        api.palace.common.MenuTreeItem:
            type: object
            properties:
                menuId:
                    type: integer
                    description: Unique identifier for the menu tree item
                    format: uint32
                name:
                    type: string
                    description: Name of the menu tree item
                path:
                    type: string
                    description: Path of the menu tree item
                status:
                    type: integer
                    description: Status of the menu tree item
                    format: enum
                icon:
                    type: string
                    description: Icon of the menu tree item
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.MenuTreeItem'
                    description: children of the menu tree item
                menuType:
                    type: integer
                    format: enum
                resources:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.ResourceItem'
        api.palace.common.NoticeGroupItem:
            type: object
            properties:
                noticeGroupId:
                    type: integer
                    format: uint32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                name:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                noticeMembers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.NoticeMemberItem'
                hooks:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.NoticeHookItem'
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
        api.palace.common.NoticeHookItem:
            type: object
            properties:
                noticeHookId:
                    type: integer
                    format: uint32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                name:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                url:
                    type: string
                method:
                    type: integer
                    format: enum
                secret:
                    type: string
                headers:
                    type: object
                    additionalProperties:
                        type: string
                app:
                    type: integer
                    format: enum
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                noticeGroups:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.NoticeGroupItem'
        api.palace.common.NoticeMemberItem:
            type: object
            properties:
                noticeGroupId:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
                noticeType:
                    type: integer
                    format: enum
                noticeGroup:
                    $ref: '#/components/schemas/api.palace.common.NoticeGroupItem'
                member:
                    $ref: '#/components/schemas/api.palace.common.TeamMemberBaseItem'
        api.palace.common.OperateLogItem:
            type: object
            properties:
                operateLogId:
                    type: integer
                    description: Unique identifier for the operation log.
                    format: uint32
                operator:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: Operator information of the operation requester
                type:
                    type: integer
                    description: Type of the operation
                    format: enum
                module:
                    type: integer
                    description: ResourceModule of the operation
                    format: enum
                dataId:
                    type: integer
                    description: DataId of the operation
                    format: uint32
                dataName:
                    type: string
                    description: DataName of the operation
                operateTime:
                    type: string
                    description: OperateTime of the operation
                title:
                    type: string
                    description: Title of the operation
                before:
                    type: string
                    description: Before of the operation
                after:
                    type: string
                    description: After of the operation
                ip:
                    type: string
                    description: IP of the operation
            description: OperateLogItem represents the structure of an operation log item.
        api.palace.common.PaginationReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                page:
                    type: integer
                    format: uint32
                pageSize:
                    type: integer
                    format: uint32
            description: |-
                PaginationReply is the response for pagination queries, containing the total number of items, the current page number, and the number of items per page.
                 total: The total number of items.
                 page: The current page number.
                 limit: The number of items per page.
        api.palace.common.PaginationRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: uint32
                pageSize:
                    type: integer
                    format: uint32
            description: |-
                PaginationRequest is used for pagination queries, specifying the page number and the number of items per page.
                 page: The current page number, must be greater than 0.
                 limit: The number of items per page, must be greater than 0 and less than or equal to 10000.
        api.palace.common.ResourceItem:
            type: object
            properties:
                resourceId:
                    type: integer
                    description: Unique identifier for the API resource
                    format: uint32
                name:
                    type: string
                    description: Name of the API resource
                path:
                    type: string
                    description: Path of the API resource
                status:
                    type: integer
                    description: Status of the API resource
                    format: enum
                remark:
                    type: string
                    description: Remarks about the API resource
                createdAt:
                    type: string
                    description: Creation time of the API resource
                updatedAt:
                    type: string
                    description: Last update time of the API resource
                allow:
                    type: integer
                    format: enum
                menus:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.MenuTreeItem'
            description: system-api
        api.palace.common.SendMessageLogItem:
            type: object
            properties:
                requestId:
                    type: string
                message:
                    type: string
                messageType:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                error:
                    type: string
                retryCount:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.palace.common.StrategyMetricRuleLabelNotice:
            type: object
            properties:
                labelNoticeId:
                    type: integer
                    format: uint32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                strategyMetricRuleId:
                    type: integer
                    format: uint32
                labelKey:
                    type: string
                labelValue:
                    type: string
                notices:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.NoticeGroupItem'
        api.palace.common.SubscriberItem:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                subscribeType:
                    type: integer
                    description: subscribe type
                    format: enum
                strategy:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.TeamStrategyItem'
                    description: strategy
                subscribeTime:
                    type: string
                    description: subscribe time
            description: subscriber
        api.palace.common.SystemRoleItem:
            type: object
            properties:
                roleId:
                    type: integer
                    description: Unique identifier for the system role
                    format: uint32
                name:
                    type: string
                    description: Name of the system role
                remark:
                    type: string
                    description: Remarks about the system role
                status:
                    type: integer
                    description: Status of the system role
                    format: enum
                createdAt:
                    type: string
                    description: Creation time of the system role
                updatedAt:
                    type: string
                    description: Last update time of the system role
                resources:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.ResourceItem'
                    description: List of resources associated with the system role
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: List of users assigned to the system role
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
        api.palace.common.TLS:
            type: object
            properties:
                serverName:
                    type: string
                clientCert:
                    type: string
                clientKey:
                    type: string
        api.palace.common.TeamAuditItem:
            type: object
            properties:
                teamAuditId:
                    type: integer
                    description: Unique identifier for the team audit record
                    format: uint32
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: User information of the audit requester
                status:
                    type: integer
                    description: Status of the team audit
                    format: enum
                reason:
                    type: string
                    description: Reason for the audit result
                createdAt:
                    type: string
                    description: Creation time of the audit record
                team:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.TeamBaseItem'
                    description: Team information being audited
                action:
                    type: integer
                    format: enum
        api.palace.common.TeamBaseItem:
            type: object
            properties:
                teamId:
                    type: integer
                    description: Unique identifier for the team
                    format: uint32
                name:
                    type: string
                    description: Name of the team
                remark:
                    type: string
                    description: Remarks about the team
                logo:
                    type: string
                    description: Logo URL of the team
        api.palace.common.TeamDashboardChartItem:
            type: object
            properties:
                teamDashboardChartId:
                    type: integer
                    format: uint32
                dashboardId:
                    type: integer
                    format: uint32
                title:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                url:
                    type: string
                width:
                    type: string
                height:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.palace.common.TeamDashboardItem:
            type: object
            properties:
                teamDashboardId:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                colorHex:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.palace.common.TeamDictItem:
            type: object
            properties:
                teamId:
                    type: integer
                    format: uint32
                dictId:
                    type: integer
                    format: uint32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                key:
                    type: string
                value:
                    type: string
                lang:
                    type: string
                color:
                    type: string
                dictType:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
        api.palace.common.TeamItem:
            type: object
            properties:
                teamId:
                    type: integer
                    description: Unique identifier for the team.
                    format: uint32
                uuid:
                    type: string
                    description: Universally unique identifier for the team.
                name:
                    type: string
                    description: Name of the team.
                remark:
                    type: string
                    description: Remarks or additional information about the team.
                logo:
                    type: string
                    description: URL or path to the team's logo.
                status:
                    type: integer
                    description: Status of the team.
                    format: enum
                creator:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: Information about the creator of the team.
                leader:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: Information about the leader of the team.
                admins:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: List of administrators in the team.
                createdAt:
                    type: string
                    description: Timestamp indicating when the team was created.
                updatedAt:
                    type: string
                    description: Timestamp indicating when the team was last updated.
                memberCount:
                    type: string
                    description: Total number of members in the team.
                strategyCount:
                    type: string
                    description: Total number of strategies associated with the team.
                datasourceCount:
                    type: string
                    description: Total number of data sources associated with the team.
            description: TeamItem represents the structure of a team.
        api.palace.common.TeamMemberBaseItem:
            type: object
            properties:
                teamMemberId:
                    type: integer
                    format: uint32
                memberName:
                    type: string
                remark:
                    type: string
                position:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                createdAt:
                    type: string
                updatedAt:
                    type: string
                user:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
        api.palace.common.TeamMemberItem:
            type: object
            properties:
                teamMemberId:
                    type: integer
                    description: Unique identifier for the member.
                    format: uint32
                user:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: Information about the user who is a member.
                position:
                    type: integer
                    description: Position of the member within the team.
                    format: enum
                status:
                    type: integer
                    description: Status of the member.
                    format: enum
                inviter:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: Information about the user who invited the member.
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamRoleItem'
                    description: List of roles assigned to the member.
                createdAt:
                    type: string
                    description: Timestamp indicating when the member was added to the team.
                updatedAt:
                    type: string
                    description: Timestamp indicating when the member's information was last updated.
            description: TeamMemberItem represents the structure of a team member.
        api.palace.common.TeamMetricDatasourceItem:
            type: object
            properties:
                teamId:
                    type: integer
                    format: uint32
                datasourceId:
                    type: integer
                    format: uint32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                name:
                    type: string
                remark:
                    type: string
                driver:
                    type: integer
                    format: enum
                endpoint:
                    type: string
                scrapeInterval:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                headers:
                    type: object
                    additionalProperties:
                        type: string
                queryMethod:
                    type: integer
                    format: enum
                ca:
                    type: string
                tls:
                    $ref: '#/components/schemas/api.palace.common.TLS'
                basicAuth:
                    $ref: '#/components/schemas/api.palace.common.BasicAuth'
                extra:
                    type: object
                    additionalProperties:
                        type: string
                status:
                    type: integer
                    format: enum
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
        api.palace.common.TeamRoleItem:
            type: object
            properties:
                teamRoleId:
                    type: integer
                    description: Unique identifier for the role.
                    format: uint32
                name:
                    type: string
                    description: Name of the role.
                remark:
                    type: string
                    description: Remarks or additional information about the role.
                status:
                    type: integer
                    description: Status of the role.
                    format: enum
                resources:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.ResourceItem'
                    description: List of resources associated with the role.
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamMemberItem'
                    description: List of members assigned to the role.
                createdAt:
                    type: string
                    description: Timestamp indicating when the role was created.
                updatedAt:
                    type: string
                    description: Timestamp indicating when the role was last updated.
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
            description: TeamRoleItem represents the structure of a team role.
        api.palace.common.TeamStrategyGroupItem:
            type: object
            properties:
                groupId:
                    type: integer
                    description: Unique identifier for the strategy group.
                    format: uint32
                name:
                    type: string
                    description: Name of the strategy group.
                remark:
                    type: string
                    description: Remarks or additional information about the group.
                status:
                    type: integer
                    description: Status of the strategy group.
                    format: enum
                strategyCount:
                    type: string
                    description: Total number of strategies in the group.
                enableStrategyCount:
                    type: string
                    description: Number of enabled strategies in the group.
                createdAt:
                    type: string
                    description: Timestamp indicating when the group was created.
                updatedAt:
                    type: string
                    description: Timestamp indicating when the group was last updated.
                creator:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: Information about the creator of the group.
            description: TeamStrategyGroupItem represents the structure of a team strategy group item.
        api.palace.common.TeamStrategyItem:
            type: object
            properties:
                strategyId:
                    type: integer
                    description: Unique identifier for the strategy.
                    format: uint32
                groupId:
                    type: integer
                    description: Id of the group to which the strategy belongs.
                    format: uint32
                name:
                    type: string
                    description: Name of the strategy.
                remark:
                    type: string
                    description: Remarks or additional information about the strategy.
                status:
                    type: integer
                    description: Status of the strategy.
                    format: enum
                creator:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.UserBaseItem'
                    description: Information about the creator of the strategy.
                createdAt:
                    type: string
                    description: Timestamp indicating when the strategy was created.
                updatedAt:
                    type: string
                    description: Timestamp indicating when the strategy was last updated.
                team:
                    allOf:
                        - $ref: '#/components/schemas/api.palace.common.TeamBaseItem'
                    description: Information about the team associated with the strategy.
                notices:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.NoticeGroupItem'
                strategyType:
                    type: integer
                    format: enum
                group:
                    $ref: '#/components/schemas/api.palace.common.TeamStrategyGroupItem'
            description: TeamStrategyItem represents the structure of a team strategy item.
        api.palace.common.TeamStrategyMetricItem:
            type: object
            properties:
                base:
                    $ref: '#/components/schemas/api.palace.common.TeamStrategyItem'
                StrategyMetricId:
                    type: integer
                    format: uint32
                expr:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                strategyMetricRules:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamStrategyMetricItem_RuleItem'
                datasource:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamMetricDatasourceItem'
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
        api.palace.common.TeamStrategyMetricItem_RuleItem:
            type: object
            properties:
                strategyMetricId:
                    type: integer
                    format: uint32
                level:
                    $ref: '#/components/schemas/api.palace.common.TeamDictItem'
                ruleId:
                    type: integer
                    format: uint32
                sampleMode:
                    type: integer
                    format: enum
                condition:
                    type: integer
                    format: enum
                total:
                    type: string
                values:
                    type: array
                    items:
                        type: number
                        format: double
                duration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                status:
                    type: integer
                    format: enum
                notices:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.NoticeGroupItem'
                labelNotices:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.StrategyMetricRuleLabelNotice'
                alarmPages:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamDictItem'
        api.palace.common.UserBaseItem:
            type: object
            properties:
                username:
                    type: string
                    description: User's login name
                nickname:
                    type: string
                    description: User's nickname
                avatar:
                    type: string
                    description: User's avatar URL
                gender:
                    type: integer
                    description: User's gender
                    format: enum
                userId:
                    type: integer
                    description: User's unique identifier
                    format: uint32
        api.palace.common.UserItem:
            type: object
            properties:
                username:
                    type: string
                    description: User's login name
                nickname:
                    type: string
                    description: User's nickname
                avatar:
                    type: string
                    description: User's avatar URL
                gender:
                    type: integer
                    description: User's gender
                    format: enum
                email:
                    type: string
                    description: User's email address (encrypted)
                phone:
                    type: string
                    description: User's phone number (encrypted)
                remark:
                    type: string
                    description: Remarks about the user
                position:
                    type: integer
                    description: User's position/role in the system
                    format: enum
                status:
                    type: integer
                    description: User's status
                    format: enum
                createdAt:
                    type: string
                    description: User's creation time
                updatedAt:
                    type: string
                    description: User's last update time
                userId:
                    type: integer
                    description: User's unique identifier
                    format: uint32
        config.Discovery:
            type: object
            properties:
                driver:
                    type: integer
                    format: enum
                enable:
                    type: boolean
                etcd:
                    $ref: '#/components/schemas/config.Etcd'
            description: server discovery config
        config.Etcd:
            type: object
            properties:
                endpoints:
                    type: array
                    items:
                        type: string
                username:
                    type: string
                password:
                    type: string
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                autoSyncInterval:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                dialKeepAliveTime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                dialKeepAliveTimeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                maxCallSendMsgSize:
                    type: string
                maxCallRecvMsgSize:
                    type: string
                rejectOldCluster:
                    type: boolean
                permitWithoutStream:
                    type: boolean
                maxUnaryRetries:
                    type: string
                backoffWaitBetween:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                backoffJitterFraction:
                    type: number
                    format: double
            description: etcd data source config
        config.MicroServer:
            type: object
            properties:
                endpoint:
                    type: string
                    description: endpoint
                secret:
                    type: string
                    description: secret
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: timeout
                network:
                    type: integer
                    description: network type, http, https, grpc
                    format: enum
                version:
                    type: string
                    description: node version
                name:
                    type: string
                    description: name service name
            description: micro server config
tags:
    - name: Alert
    - name: Auth
      description: Auth service provides authentication related operations
    - name: Callback
    - name: Health
      description: Health Check API
    - name: Resource
      description: Resource service provides operations for managing resources
    - name: Server
    - name: System
      description: System service provides operations for managing system users, roles, teams, and audits
    - name: Team
      description: Team service provides operations for managing teams, members, roles, and email configurations
    - name: TeamDashboard
    - name: TeamDatasource
    - name: TeamDict
    - name: TeamLog
    - name: TeamNotice
    - name: TeamStrategy
      description: TeamStrategy service provides operations for managing team strategy groups and strategies
    - name: User
      description: User service provides operations for managing user information, teams, and subscriptions
