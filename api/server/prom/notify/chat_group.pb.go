// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: server/prom/notify/chat_group.proto

package notify

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	api "prometheus-manager/api"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建通知群组请求参数
type CreateChatGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组名称(一般指IM群, 例如微信群、钉钉群等)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 群组备注
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	// 群组webhook地址(机器人地址)
	Hook string `protobuf:"bytes,3,opt,name=hook,proto3" json:"hook,omitempty"`
	// 这个群组所属的应用
	App api.NotifyApp `protobuf:"varint,4,opt,name=app,proto3,enum=api.NotifyApp" json:"app,omitempty"`
	// hook一般是机器人, 这个字段是机器人的名称(也可以是hook别名)
	HookName string `protobuf:"bytes,5,opt,name=hookName,proto3" json:"hookName,omitempty"`
	// secret , hook通知密钥
	Secret string `protobuf:"bytes,8,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *CreateChatGroupRequest) Reset() {
	*x = CreateChatGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChatGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatGroupRequest) ProtoMessage() {}

func (x *CreateChatGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateChatGroupRequest) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{0}
}

func (x *CreateChatGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateChatGroupRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateChatGroupRequest) GetHook() string {
	if x != nil {
		return x.Hook
	}
	return ""
}

func (x *CreateChatGroupRequest) GetApp() api.NotifyApp {
	if x != nil {
		return x.App
	}
	return api.NotifyApp(0)
}

func (x *CreateChatGroupRequest) GetHookName() string {
	if x != nil {
		return x.HookName
	}
	return ""
}

func (x *CreateChatGroupRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// 创建通知群组响应参数
type CreateChatGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组ID, 成功会返回该参数
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateChatGroupReply) Reset() {
	*x = CreateChatGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChatGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatGroupReply) ProtoMessage() {}

func (x *CreateChatGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatGroupReply.ProtoReflect.Descriptor instead.
func (*CreateChatGroupReply) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{1}
}

func (x *CreateChatGroupReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新通知群组请求参数
type UpdateChatGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组ID(大于0), 路径参数
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 群组名称(一般指IM群, 例如微信群、钉钉群等)
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 群组备注, 不允许超过255字符
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	// hook一般是机器人, 这个字段是机器人的名称(也可以是hook别名)
	HookName string `protobuf:"bytes,4,opt,name=hookName,proto3" json:"hookName,omitempty"`
}

func (x *UpdateChatGroupRequest) Reset() {
	*x = UpdateChatGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChatGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChatGroupRequest) ProtoMessage() {}

func (x *UpdateChatGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChatGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateChatGroupRequest) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateChatGroupRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateChatGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateChatGroupRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateChatGroupRequest) GetHookName() string {
	if x != nil {
		return x.HookName
	}
	return ""
}

// 更新通知群组响应参数
type UpdateChatGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组ID, 成功会返回该参数
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateChatGroupReply) Reset() {
	*x = UpdateChatGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChatGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChatGroupReply) ProtoMessage() {}

func (x *UpdateChatGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChatGroupReply.ProtoReflect.Descriptor instead.
func (*UpdateChatGroupReply) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateChatGroupReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除通知群组请求参数
type DeleteChatGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 需要删除的群组ID(大于0), 路径参数
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChatGroupRequest) Reset() {
	*x = DeleteChatGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatGroupRequest) ProtoMessage() {}

func (x *DeleteChatGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatGroupRequest) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteChatGroupRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除通知群组响应参数
type DeleteChatGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组ID, 成功会返回该参数
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChatGroupReply) Reset() {
	*x = DeleteChatGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatGroupReply) ProtoMessage() {}

func (x *DeleteChatGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatGroupReply.ProtoReflect.Descriptor instead.
func (*DeleteChatGroupReply) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteChatGroupReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取通知群组请求参数
type GetChatGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 需要获取的群组ID(大于0), 路径参数
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetChatGroupRequest) Reset() {
	*x = GetChatGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatGroupRequest) ProtoMessage() {}

func (x *GetChatGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatGroupRequest.ProtoReflect.Descriptor instead.
func (*GetChatGroupRequest) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{6}
}

func (x *GetChatGroupRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取通知群组响应参数
type GetChatGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组详情
	Detail *api.ChatGroup `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *GetChatGroupReply) Reset() {
	*x = GetChatGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatGroupReply) ProtoMessage() {}

func (x *GetChatGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatGroupReply.ProtoReflect.Descriptor instead.
func (*GetChatGroupReply) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{7}
}

func (x *GetChatGroupReply) GetDetail() *api.ChatGroup {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 获取通知群组列表请求参数
type ListChatGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数, 必须传递
	Page *api.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 关键字, 用于模糊查询, 非必填, 最大为20字符
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 群组状态
	Status api.Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
	// 所属平台
	App api.NotifyApp `protobuf:"varint,4,opt,name=app,proto3,enum=api.NotifyApp" json:"app,omitempty"`
}

func (x *ListChatGroupRequest) Reset() {
	*x = ListChatGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChatGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChatGroupRequest) ProtoMessage() {}

func (x *ListChatGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChatGroupRequest.ProtoReflect.Descriptor instead.
func (*ListChatGroupRequest) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{8}
}

func (x *ListChatGroupRequest) GetPage() *api.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListChatGroupRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListChatGroupRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

func (x *ListChatGroupRequest) GetApp() api.NotifyApp {
	if x != nil {
		return x.App
	}
	return api.NotifyApp(0)
}

// 获取通知群组列表响应参数
type ListChatGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Page *api.PageReply `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 群组列表
	List []*api.ChatGroup `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListChatGroupReply) Reset() {
	*x = ListChatGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChatGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChatGroupReply) ProtoMessage() {}

func (x *ListChatGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChatGroupReply.ProtoReflect.Descriptor instead.
func (*ListChatGroupReply) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{9}
}

func (x *ListChatGroupReply) GetPage() *api.PageReply {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListChatGroupReply) GetList() []*api.ChatGroup {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取通知群组列表(下拉选择)请求参数
type SelectChatGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数, 必须传递
	Page *api.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 关键字, 用于模糊查询, 非必填, 最大为20字符
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 群组状态
	Status api.Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
}

func (x *SelectChatGroupRequest) Reset() {
	*x = SelectChatGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectChatGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectChatGroupRequest) ProtoMessage() {}

func (x *SelectChatGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectChatGroupRequest.ProtoReflect.Descriptor instead.
func (*SelectChatGroupRequest) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{10}
}

func (x *SelectChatGroupRequest) GetPage() *api.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SelectChatGroupRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SelectChatGroupRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

// 获取通知群组列表(下拉选择)响应参数
type SelectChatGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Page *api.PageReply `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 群组列表
	List []*api.ChatGroupSelectV1 `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectChatGroupReply) Reset() {
	*x = SelectChatGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_prom_notify_chat_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectChatGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectChatGroupReply) ProtoMessage() {}

func (x *SelectChatGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_prom_notify_chat_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectChatGroupReply.ProtoReflect.Descriptor instead.
func (*SelectChatGroupReply) Descriptor() ([]byte, []int) {
	return file_server_prom_notify_chat_group_proto_rawDescGZIP(), []int{11}
}

func (x *SelectChatGroupReply) GetPage() *api.PageReply {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SelectChatGroupReply) GetList() []*api.ChatGroupSelectV1 {
	if x != nil {
		return x.List
	}
	return nil
}

var File_server_prom_notify_chat_group_proto protoreflect.FileDescriptor

var file_server_prom_notify_chat_group_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x02, 0x18,
	0x20, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xff,
	0x01, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x6f, 0x6f,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x72, 0x0c, 0x32, 0x0a,
	0x5e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3f, 0x3a, 0x2f, 0x2f, 0x52, 0x04, 0x68, 0x6f, 0x6f, 0x6b,
	0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x25, 0x0a, 0x08,
	0x68, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x02, 0x18, 0x20, 0x52, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x02, 0x18, 0x20,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xff, 0x01,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x08, 0x68, 0x6f, 0x6f, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x02, 0x18, 0x20, 0x52, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x26, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22,
	0xc4, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x18, 0x14, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x5c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x21, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x14, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x66, 0x0a, 0x14, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x56, 0x31, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0x87, 0x07, 0x0a, 0x09, 0x43, 0x68,
	0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x95, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x95, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x89, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x8d, 0x01, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a,
	0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x95, 0x01, 0x0a, 0x0f,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x42, 0x4c, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x01, 0x5a,
	0x30, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2d, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x3b, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_prom_notify_chat_group_proto_rawDescOnce sync.Once
	file_server_prom_notify_chat_group_proto_rawDescData = file_server_prom_notify_chat_group_proto_rawDesc
)

func file_server_prom_notify_chat_group_proto_rawDescGZIP() []byte {
	file_server_prom_notify_chat_group_proto_rawDescOnce.Do(func() {
		file_server_prom_notify_chat_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_prom_notify_chat_group_proto_rawDescData)
	})
	return file_server_prom_notify_chat_group_proto_rawDescData
}

var file_server_prom_notify_chat_group_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_server_prom_notify_chat_group_proto_goTypes = []interface{}{
	(*CreateChatGroupRequest)(nil), // 0: api.server.prom.notify.CreateChatGroupRequest
	(*CreateChatGroupReply)(nil),   // 1: api.server.prom.notify.CreateChatGroupReply
	(*UpdateChatGroupRequest)(nil), // 2: api.server.prom.notify.UpdateChatGroupRequest
	(*UpdateChatGroupReply)(nil),   // 3: api.server.prom.notify.UpdateChatGroupReply
	(*DeleteChatGroupRequest)(nil), // 4: api.server.prom.notify.DeleteChatGroupRequest
	(*DeleteChatGroupReply)(nil),   // 5: api.server.prom.notify.DeleteChatGroupReply
	(*GetChatGroupRequest)(nil),    // 6: api.server.prom.notify.GetChatGroupRequest
	(*GetChatGroupReply)(nil),      // 7: api.server.prom.notify.GetChatGroupReply
	(*ListChatGroupRequest)(nil),   // 8: api.server.prom.notify.ListChatGroupRequest
	(*ListChatGroupReply)(nil),     // 9: api.server.prom.notify.ListChatGroupReply
	(*SelectChatGroupRequest)(nil), // 10: api.server.prom.notify.SelectChatGroupRequest
	(*SelectChatGroupReply)(nil),   // 11: api.server.prom.notify.SelectChatGroupReply
	(api.NotifyApp)(0),             // 12: api.NotifyApp
	(*api.ChatGroup)(nil),          // 13: api.ChatGroup
	(*api.PageRequest)(nil),        // 14: api.PageRequest
	(api.Status)(0),                // 15: api.Status
	(*api.PageReply)(nil),          // 16: api.PageReply
	(*api.ChatGroupSelectV1)(nil),  // 17: api.ChatGroupSelectV1
}
var file_server_prom_notify_chat_group_proto_depIdxs = []int32{
	12, // 0: api.server.prom.notify.CreateChatGroupRequest.app:type_name -> api.NotifyApp
	13, // 1: api.server.prom.notify.GetChatGroupReply.detail:type_name -> api.ChatGroup
	14, // 2: api.server.prom.notify.ListChatGroupRequest.page:type_name -> api.PageRequest
	15, // 3: api.server.prom.notify.ListChatGroupRequest.status:type_name -> api.Status
	12, // 4: api.server.prom.notify.ListChatGroupRequest.app:type_name -> api.NotifyApp
	16, // 5: api.server.prom.notify.ListChatGroupReply.page:type_name -> api.PageReply
	13, // 6: api.server.prom.notify.ListChatGroupReply.list:type_name -> api.ChatGroup
	14, // 7: api.server.prom.notify.SelectChatGroupRequest.page:type_name -> api.PageRequest
	15, // 8: api.server.prom.notify.SelectChatGroupRequest.status:type_name -> api.Status
	16, // 9: api.server.prom.notify.SelectChatGroupReply.page:type_name -> api.PageReply
	17, // 10: api.server.prom.notify.SelectChatGroupReply.list:type_name -> api.ChatGroupSelectV1
	0,  // 11: api.server.prom.notify.ChatGroup.CreateChatGroup:input_type -> api.server.prom.notify.CreateChatGroupRequest
	2,  // 12: api.server.prom.notify.ChatGroup.UpdateChatGroup:input_type -> api.server.prom.notify.UpdateChatGroupRequest
	4,  // 13: api.server.prom.notify.ChatGroup.DeleteChatGroup:input_type -> api.server.prom.notify.DeleteChatGroupRequest
	6,  // 14: api.server.prom.notify.ChatGroup.GetChatGroup:input_type -> api.server.prom.notify.GetChatGroupRequest
	8,  // 15: api.server.prom.notify.ChatGroup.ListChatGroup:input_type -> api.server.prom.notify.ListChatGroupRequest
	10, // 16: api.server.prom.notify.ChatGroup.SelectChatGroup:input_type -> api.server.prom.notify.SelectChatGroupRequest
	1,  // 17: api.server.prom.notify.ChatGroup.CreateChatGroup:output_type -> api.server.prom.notify.CreateChatGroupReply
	3,  // 18: api.server.prom.notify.ChatGroup.UpdateChatGroup:output_type -> api.server.prom.notify.UpdateChatGroupReply
	5,  // 19: api.server.prom.notify.ChatGroup.DeleteChatGroup:output_type -> api.server.prom.notify.DeleteChatGroupReply
	7,  // 20: api.server.prom.notify.ChatGroup.GetChatGroup:output_type -> api.server.prom.notify.GetChatGroupReply
	9,  // 21: api.server.prom.notify.ChatGroup.ListChatGroup:output_type -> api.server.prom.notify.ListChatGroupReply
	11, // 22: api.server.prom.notify.ChatGroup.SelectChatGroup:output_type -> api.server.prom.notify.SelectChatGroupReply
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_server_prom_notify_chat_group_proto_init() }
func file_server_prom_notify_chat_group_proto_init() {
	if File_server_prom_notify_chat_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_prom_notify_chat_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChatGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChatGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChatGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChatGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChatGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChatGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectChatGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_prom_notify_chat_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectChatGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_prom_notify_chat_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_prom_notify_chat_group_proto_goTypes,
		DependencyIndexes: file_server_prom_notify_chat_group_proto_depIdxs,
		MessageInfos:      file_server_prom_notify_chat_group_proto_msgTypes,
	}.Build()
	File_server_prom_notify_chat_group_proto = out.File
	file_server_prom_notify_chat_group_proto_rawDesc = nil
	file_server_prom_notify_chat_group_proto_goTypes = nil
	file_server_prom_notify_chat_group_proto_depIdxs = nil
}
