// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: server/alarm/page/page.proto

package page

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	api "prometheus-manager/api"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建告警页面请求参数
type CreateAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面名称(字符串长度1-20)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 告警页面图标(字符串长度0-2048)
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	// 告警页面颜色(字符串长度0-10)
	Color string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	// 告警页面备注(字符串长度0-200)
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreateAlarmPageRequest) Reset() {
	*x = CreateAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlarmPageRequest) ProtoMessage() {}

func (x *CreateAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*CreateAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAlarmPageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAlarmPageRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateAlarmPageRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CreateAlarmPageRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建告警页面响应参数
type CreateAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateAlarmPageReply) Reset() {
	*x = CreateAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlarmPageReply) ProtoMessage() {}

func (x *CreateAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlarmPageReply.ProtoReflect.Descriptor instead.
func (*CreateAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAlarmPageReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新告警页面请求参数
type UpdateAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID(大于0)
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 告警页面名称(字符串长度1-20)
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 告警页面图标(字符串长度0-2048)
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// 告警页面颜色(字符串长度0-10)
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// 告警页面备注(字符串长度0-200)
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateAlarmPageRequest) Reset() {
	*x = UpdateAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlarmPageRequest) ProtoMessage() {}

func (x *UpdateAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAlarmPageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAlarmPageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAlarmPageRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateAlarmPageRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *UpdateAlarmPageRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新告警页面响应参数
type UpdateAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateAlarmPageReply) Reset() {
	*x = UpdateAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlarmPageReply) ProtoMessage() {}

func (x *UpdateAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlarmPageReply.ProtoReflect.Descriptor instead.
func (*UpdateAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAlarmPageReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量更新告警页面状态请求参数
type BatchUpdateAlarmPageStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID列表(大于0)
	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	// 告警页面状态
	Status api.Status `protobuf:"varint,2,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
}

func (x *BatchUpdateAlarmPageStatusRequest) Reset() {
	*x = BatchUpdateAlarmPageStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateAlarmPageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateAlarmPageStatusRequest) ProtoMessage() {}

func (x *BatchUpdateAlarmPageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateAlarmPageStatusRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateAlarmPageStatusRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{4}
}

func (x *BatchUpdateAlarmPageStatusRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BatchUpdateAlarmPageStatusRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

// 批量更新告警页面状态响应参数
type BatchUpdateAlarmPageStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID列表
	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchUpdateAlarmPageStatusReply) Reset() {
	*x = BatchUpdateAlarmPageStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateAlarmPageStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateAlarmPageStatusReply) ProtoMessage() {}

func (x *BatchUpdateAlarmPageStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateAlarmPageStatusReply.ProtoReflect.Descriptor instead.
func (*BatchUpdateAlarmPageStatusReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{5}
}

func (x *BatchUpdateAlarmPageStatusReply) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除告警页面请求参数
type DeleteAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID(大于0)
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlarmPageRequest) Reset() {
	*x = DeleteAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlarmPageRequest) ProtoMessage() {}

func (x *DeleteAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAlarmPageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除告警页面响应参数
type DeleteAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlarmPageReply) Reset() {
	*x = DeleteAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlarmPageReply) ProtoMessage() {}

func (x *DeleteAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlarmPageReply.ProtoReflect.Descriptor instead.
func (*DeleteAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAlarmPageReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除告警页面请求参数
type BatchDeleteAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID列表(大于0)
	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchDeleteAlarmPageRequest) Reset() {
	*x = BatchDeleteAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteAlarmPageRequest) ProtoMessage() {}

func (x *BatchDeleteAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{8}
}

func (x *BatchDeleteAlarmPageRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 批量删除告警页面响应参数
type BatchDeleteAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID列表
	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchDeleteAlarmPageReply) Reset() {
	*x = BatchDeleteAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteAlarmPageReply) ProtoMessage() {}

func (x *BatchDeleteAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteAlarmPageReply.ProtoReflect.Descriptor instead.
func (*BatchDeleteAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{9}
}

func (x *BatchDeleteAlarmPageReply) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 获取告警页面请求参数
type GetAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID(大于0)
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAlarmPageRequest) Reset() {
	*x = GetAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmPageRequest) ProtoMessage() {}

func (x *GetAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*GetAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{10}
}

func (x *GetAlarmPageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取告警页面响应参数
type GetAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面信息
	AlarmPage *api.AlarmPageV1 `protobuf:"bytes,1,opt,name=alarmPage,proto3" json:"alarmPage,omitempty"`
}

func (x *GetAlarmPageReply) Reset() {
	*x = GetAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmPageReply) ProtoMessage() {}

func (x *GetAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmPageReply.ProtoReflect.Descriptor instead.
func (*GetAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{11}
}

func (x *GetAlarmPageReply) GetAlarmPage() *api.AlarmPageV1 {
	if x != nil {
		return x.AlarmPage
	}
	return nil
}

// 获取告警页面列表请求参数
type ListAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Page *api.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 关键字(字符串长度0-20)
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 告警页面状态
	Status api.Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
}

func (x *ListAlarmPageRequest) Reset() {
	*x = ListAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlarmPageRequest) ProtoMessage() {}

func (x *ListAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*ListAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{12}
}

func (x *ListAlarmPageRequest) GetPage() *api.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListAlarmPageRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListAlarmPageRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

// 获取告警页面列表响应参数
type ListAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Page *api.PageReply `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 告警页面列表
	List []*api.AlarmPageV1 `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListAlarmPageReply) Reset() {
	*x = ListAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlarmPageReply) ProtoMessage() {}

func (x *ListAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlarmPageReply.ProtoReflect.Descriptor instead.
func (*ListAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{13}
}

func (x *ListAlarmPageReply) GetPage() *api.PageReply {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListAlarmPageReply) GetList() []*api.AlarmPageV1 {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取告警页面下拉列表请求参数
type SelectAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Page *api.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 关键字(字符串长度0-20)
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 告警页面状态
	Status api.Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
}

func (x *SelectAlarmPageRequest) Reset() {
	*x = SelectAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectAlarmPageRequest) ProtoMessage() {}

func (x *SelectAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*SelectAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{14}
}

func (x *SelectAlarmPageRequest) GetPage() *api.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SelectAlarmPageRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SelectAlarmPageRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

// 获取告警页面下拉列表响应参数
type SelectAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Page *api.PageReply `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 告警页面列表
	List []*api.AlarmPageSelectV1 `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectAlarmPageReply) Reset() {
	*x = SelectAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectAlarmPageReply) ProtoMessage() {}

func (x *SelectAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectAlarmPageReply.ProtoReflect.Descriptor instead.
func (*SelectAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{15}
}

func (x *SelectAlarmPageReply) GetPage() *api.PageReply {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SelectAlarmPageReply) GetList() []*api.AlarmPageSelectV1 {
	if x != nil {
		return x.List
	}
	return nil
}

// 统计各告警页面告警的数量请求参数
type CountAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID列表(大于0)
	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CountAlarmPageRequest) Reset() {
	*x = CountAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAlarmPageRequest) ProtoMessage() {}

func (x *CountAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*CountAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{16}
}

func (x *CountAlarmPageRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 统计各告警页面告警的数量响应参数
type CountAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmCount map[uint32]int64 `protobuf:"bytes,1,rep,name=alarmCount,proto3" json:"alarmCount,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CountAlarmPageReply) Reset() {
	*x = CountAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAlarmPageReply) ProtoMessage() {}

func (x *CountAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAlarmPageReply.ProtoReflect.Descriptor instead.
func (*CountAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{17}
}

func (x *CountAlarmPageReply) GetAlarmCount() map[uint32]int64 {
	if x != nil {
		return x.AlarmCount
	}
	return nil
}

// 我的告警页面列表请求参数
type ListMyAlarmPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyAlarmPageRequest) Reset() {
	*x = ListMyAlarmPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyAlarmPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyAlarmPageRequest) ProtoMessage() {}

func (x *ListMyAlarmPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyAlarmPageRequest.ProtoReflect.Descriptor instead.
func (*ListMyAlarmPageRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{18}
}

// 我的告警页面列表响应参数
type ListMyAlarmPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 我的告警页面列表
	List []*api.AlarmPageV1 `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListMyAlarmPageReply) Reset() {
	*x = ListMyAlarmPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyAlarmPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyAlarmPageReply) ProtoMessage() {}

func (x *ListMyAlarmPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyAlarmPageReply.ProtoReflect.Descriptor instead.
func (*ListMyAlarmPageReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{19}
}

func (x *ListMyAlarmPageReply) GetList() []*api.AlarmPageV1 {
	if x != nil {
		return x.List
	}
	return nil
}

// 配置我的告警页面列表请求参数
type MyAlarmPagesConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 告警页面ID列表(大于0)
	AlarmIds []uint32 `protobuf:"varint,1,rep,packed,name=alarmIds,proto3" json:"alarmIds,omitempty"`
}

func (x *MyAlarmPagesConfigRequest) Reset() {
	*x = MyAlarmPagesConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyAlarmPagesConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyAlarmPagesConfigRequest) ProtoMessage() {}

func (x *MyAlarmPagesConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyAlarmPagesConfigRequest.ProtoReflect.Descriptor instead.
func (*MyAlarmPagesConfigRequest) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{20}
}

func (x *MyAlarmPagesConfigRequest) GetAlarmIds() []uint32 {
	if x != nil {
		return x.AlarmIds
	}
	return nil
}

// 配置我的告警页面列表响应参数
type MyAlarmPagesConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyAlarmPagesConfigReply) Reset() {
	*x = MyAlarmPagesConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_alarm_page_page_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyAlarmPagesConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyAlarmPagesConfigReply) ProtoMessage() {}

func (x *MyAlarmPagesConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_alarm_page_page_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyAlarmPagesConfigReply.ProtoReflect.Descriptor instead.
func (*MyAlarmPagesConfigReply) Descriptor() ([]byte, []int) {
	return file_server_alarm_page_page_proto_rawDescGZIP(), []int{21}
}

var File_server_alarm_page_page_proto protoreflect.FileDescriptor

var file_server_alarm_page_page_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2f, 0x70,
	0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x2e, 0x70, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x14, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x10, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x18, 0x0a, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x26,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x14, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80,
	0x10, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x0a, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x26, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x78, 0x0a, 0x21, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x42, 0x10, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0xfa, 0x42, 0x05, 0x92,
	0x01, 0x02, 0x18, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01,
	0x20, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x1f, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x31, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x1b, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x10, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01,
	0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x18, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2d, 0x0a,
	0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2e, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x50, 0x61, 0x67, 0x65, 0x56, 0x31, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67,
	0x65, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x18, 0x14, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5e, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x50, 0x61, 0x67, 0x65, 0x56, 0x31, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9a, 0x01, 0x0a,
	0x16, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18,
	0x14, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x66, 0x0a, 0x14, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x31, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x37, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08,
	0x01, 0x10, 0x1e, 0x18, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x5a, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3d,
	0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x18, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x56, 0x31, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x19, 0x4d, 0x79, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0x1e,
	0x18, 0x01, 0x52, 0x08, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x19, 0x0a, 0x17,
	0x4d, 0x79, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xc0, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x50, 0x61, 0x67, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x93, 0x01, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0xc1, 0x01, 0x0a, 0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61,
	0x67, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x93, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xa8, 0x01, 0x0a, 0x14,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x8b, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x93,
	0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x95, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x94, 0x01, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0xa4, 0x01, 0x0a, 0x12, 0x4d, 0x79, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x79, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x79, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x42, 0x48, 0x0a, 0x15, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x70,
	0x61, 0x67, 0x65, 0x50, 0x01, 0x5a, 0x2d, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x3b,
	0x70, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_alarm_page_page_proto_rawDescOnce sync.Once
	file_server_alarm_page_page_proto_rawDescData = file_server_alarm_page_page_proto_rawDesc
)

func file_server_alarm_page_page_proto_rawDescGZIP() []byte {
	file_server_alarm_page_page_proto_rawDescOnce.Do(func() {
		file_server_alarm_page_page_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_alarm_page_page_proto_rawDescData)
	})
	return file_server_alarm_page_page_proto_rawDescData
}

var file_server_alarm_page_page_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_server_alarm_page_page_proto_goTypes = []interface{}{
	(*CreateAlarmPageRequest)(nil),            // 0: api.server.alarm.page.CreateAlarmPageRequest
	(*CreateAlarmPageReply)(nil),              // 1: api.server.alarm.page.CreateAlarmPageReply
	(*UpdateAlarmPageRequest)(nil),            // 2: api.server.alarm.page.UpdateAlarmPageRequest
	(*UpdateAlarmPageReply)(nil),              // 3: api.server.alarm.page.UpdateAlarmPageReply
	(*BatchUpdateAlarmPageStatusRequest)(nil), // 4: api.server.alarm.page.BatchUpdateAlarmPageStatusRequest
	(*BatchUpdateAlarmPageStatusReply)(nil),   // 5: api.server.alarm.page.BatchUpdateAlarmPageStatusReply
	(*DeleteAlarmPageRequest)(nil),            // 6: api.server.alarm.page.DeleteAlarmPageRequest
	(*DeleteAlarmPageReply)(nil),              // 7: api.server.alarm.page.DeleteAlarmPageReply
	(*BatchDeleteAlarmPageRequest)(nil),       // 8: api.server.alarm.page.BatchDeleteAlarmPageRequest
	(*BatchDeleteAlarmPageReply)(nil),         // 9: api.server.alarm.page.BatchDeleteAlarmPageReply
	(*GetAlarmPageRequest)(nil),               // 10: api.server.alarm.page.GetAlarmPageRequest
	(*GetAlarmPageReply)(nil),                 // 11: api.server.alarm.page.GetAlarmPageReply
	(*ListAlarmPageRequest)(nil),              // 12: api.server.alarm.page.ListAlarmPageRequest
	(*ListAlarmPageReply)(nil),                // 13: api.server.alarm.page.ListAlarmPageReply
	(*SelectAlarmPageRequest)(nil),            // 14: api.server.alarm.page.SelectAlarmPageRequest
	(*SelectAlarmPageReply)(nil),              // 15: api.server.alarm.page.SelectAlarmPageReply
	(*CountAlarmPageRequest)(nil),             // 16: api.server.alarm.page.CountAlarmPageRequest
	(*CountAlarmPageReply)(nil),               // 17: api.server.alarm.page.CountAlarmPageReply
	(*ListMyAlarmPageRequest)(nil),            // 18: api.server.alarm.page.ListMyAlarmPageRequest
	(*ListMyAlarmPageReply)(nil),              // 19: api.server.alarm.page.ListMyAlarmPageReply
	(*MyAlarmPagesConfigRequest)(nil),         // 20: api.server.alarm.page.MyAlarmPagesConfigRequest
	(*MyAlarmPagesConfigReply)(nil),           // 21: api.server.alarm.page.MyAlarmPagesConfigReply
	nil,                                       // 22: api.server.alarm.page.CountAlarmPageReply.AlarmCountEntry
	(api.Status)(0),                           // 23: api.Status
	(*api.AlarmPageV1)(nil),                   // 24: api.AlarmPageV1
	(*api.PageRequest)(nil),                   // 25: api.PageRequest
	(*api.PageReply)(nil),                     // 26: api.PageReply
	(*api.AlarmPageSelectV1)(nil),             // 27: api.AlarmPageSelectV1
}
var file_server_alarm_page_page_proto_depIdxs = []int32{
	23, // 0: api.server.alarm.page.BatchUpdateAlarmPageStatusRequest.status:type_name -> api.Status
	24, // 1: api.server.alarm.page.GetAlarmPageReply.alarmPage:type_name -> api.AlarmPageV1
	25, // 2: api.server.alarm.page.ListAlarmPageRequest.page:type_name -> api.PageRequest
	23, // 3: api.server.alarm.page.ListAlarmPageRequest.status:type_name -> api.Status
	26, // 4: api.server.alarm.page.ListAlarmPageReply.page:type_name -> api.PageReply
	24, // 5: api.server.alarm.page.ListAlarmPageReply.list:type_name -> api.AlarmPageV1
	25, // 6: api.server.alarm.page.SelectAlarmPageRequest.page:type_name -> api.PageRequest
	23, // 7: api.server.alarm.page.SelectAlarmPageRequest.status:type_name -> api.Status
	26, // 8: api.server.alarm.page.SelectAlarmPageReply.page:type_name -> api.PageReply
	27, // 9: api.server.alarm.page.SelectAlarmPageReply.list:type_name -> api.AlarmPageSelectV1
	22, // 10: api.server.alarm.page.CountAlarmPageReply.alarmCount:type_name -> api.server.alarm.page.CountAlarmPageReply.AlarmCountEntry
	24, // 11: api.server.alarm.page.ListMyAlarmPageReply.list:type_name -> api.AlarmPageV1
	0,  // 12: api.server.alarm.page.AlarmPage.CreateAlarmPage:input_type -> api.server.alarm.page.CreateAlarmPageRequest
	2,  // 13: api.server.alarm.page.AlarmPage.UpdateAlarmPage:input_type -> api.server.alarm.page.UpdateAlarmPageRequest
	4,  // 14: api.server.alarm.page.AlarmPage.BatchUpdateAlarmPageStatus:input_type -> api.server.alarm.page.BatchUpdateAlarmPageStatusRequest
	6,  // 15: api.server.alarm.page.AlarmPage.DeleteAlarmPage:input_type -> api.server.alarm.page.DeleteAlarmPageRequest
	8,  // 16: api.server.alarm.page.AlarmPage.BatchDeleteAlarmPage:input_type -> api.server.alarm.page.BatchDeleteAlarmPageRequest
	10, // 17: api.server.alarm.page.AlarmPage.GetAlarmPage:input_type -> api.server.alarm.page.GetAlarmPageRequest
	12, // 18: api.server.alarm.page.AlarmPage.ListAlarmPage:input_type -> api.server.alarm.page.ListAlarmPageRequest
	14, // 19: api.server.alarm.page.AlarmPage.SelectAlarmPage:input_type -> api.server.alarm.page.SelectAlarmPageRequest
	16, // 20: api.server.alarm.page.AlarmPage.CountAlarmPage:input_type -> api.server.alarm.page.CountAlarmPageRequest
	18, // 21: api.server.alarm.page.AlarmPage.ListMyAlarmPage:input_type -> api.server.alarm.page.ListMyAlarmPageRequest
	20, // 22: api.server.alarm.page.AlarmPage.MyAlarmPagesConfig:input_type -> api.server.alarm.page.MyAlarmPagesConfigRequest
	1,  // 23: api.server.alarm.page.AlarmPage.CreateAlarmPage:output_type -> api.server.alarm.page.CreateAlarmPageReply
	3,  // 24: api.server.alarm.page.AlarmPage.UpdateAlarmPage:output_type -> api.server.alarm.page.UpdateAlarmPageReply
	5,  // 25: api.server.alarm.page.AlarmPage.BatchUpdateAlarmPageStatus:output_type -> api.server.alarm.page.BatchUpdateAlarmPageStatusReply
	7,  // 26: api.server.alarm.page.AlarmPage.DeleteAlarmPage:output_type -> api.server.alarm.page.DeleteAlarmPageReply
	9,  // 27: api.server.alarm.page.AlarmPage.BatchDeleteAlarmPage:output_type -> api.server.alarm.page.BatchDeleteAlarmPageReply
	11, // 28: api.server.alarm.page.AlarmPage.GetAlarmPage:output_type -> api.server.alarm.page.GetAlarmPageReply
	13, // 29: api.server.alarm.page.AlarmPage.ListAlarmPage:output_type -> api.server.alarm.page.ListAlarmPageReply
	15, // 30: api.server.alarm.page.AlarmPage.SelectAlarmPage:output_type -> api.server.alarm.page.SelectAlarmPageReply
	17, // 31: api.server.alarm.page.AlarmPage.CountAlarmPage:output_type -> api.server.alarm.page.CountAlarmPageReply
	19, // 32: api.server.alarm.page.AlarmPage.ListMyAlarmPage:output_type -> api.server.alarm.page.ListMyAlarmPageReply
	21, // 33: api.server.alarm.page.AlarmPage.MyAlarmPagesConfig:output_type -> api.server.alarm.page.MyAlarmPagesConfigReply
	23, // [23:34] is the sub-list for method output_type
	12, // [12:23] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_server_alarm_page_page_proto_init() }
func file_server_alarm_page_page_proto_init() {
	if File_server_alarm_page_page_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_alarm_page_page_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateAlarmPageStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateAlarmPageStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyAlarmPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyAlarmPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyAlarmPagesConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_alarm_page_page_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyAlarmPagesConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_alarm_page_page_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_alarm_page_page_proto_goTypes,
		DependencyIndexes: file_server_alarm_page_page_proto_depIdxs,
		MessageInfos:      file_server_alarm_page_page_proto_msgTypes,
	}.Build()
	File_server_alarm_page_page_proto = out.File
	file_server_alarm_page_page_proto_rawDesc = nil
	file_server_alarm_page_page_proto_goTypes = nil
	file_server_alarm_page_page_proto_depIdxs = nil
}
