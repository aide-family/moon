syntax = "proto3";

package api.admin.template;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "admin/model.proto";
import "enum.proto";
import "global.proto";

option go_package = "github.com/aide-family/moon/api/admin/template;template";
option java_multiple_files = true;
option java_package = "api.admin.template";

service SendTemplate {
  // Create send template
  rpc CreateSendTemplate (CreateSendTemplateRequest) returns (CreateSendTemplateReply){
    option (google.api.http) = {
      post: "/v1/admin/template/send/create"
      body: "*"
    };
  };
  // Update send template
  rpc UpdateSendTemplate (UpdateSendTemplateRequest) returns (UpdateSendTemplateReply){
    option (google.api.http) = {
      put: "/v1/admin/template/send/update"
      body: "*"
    };
  };
  // Delete send template
  rpc DeleteSendTemplate (DeleteSendTemplateRequest) returns (DeleteSendTemplateReply){
    option (google.api.http) = {
      delete: "/v1/admin/template/send/delete/{id}"
    };
  };
  // Get send template
  rpc GetSendTemplate (GetSendTemplateRequest) returns (GetSendTemplateReply){
    option (google.api.http) = {
      get: "/v1/admin/template/send/get/{id}"
    };
  };
  // List send template
  rpc ListSendTemplate (ListSendTemplateRequest) returns (ListSendTemplateReply){
    option (google.api.http) = {
      post: "/v1/admin/template/send/list"
      body: "*"
    };
  }
  // Update send template status
  rpc UpdateStatus (UpdateStatusRequest) returns (UpdateStatusReply){
    option (google.api.http) = {
      put: "/v1/admin/template/send/status"
      body: "*"
    };
  }
}

message CreateSendTemplateRequest {
  // 模板名称
  string name = 1[(buf.validate.field).required = true, (buf.validate.field).cel = {
    message: "模板名称长度在3-20个字符之间"
    expression: 'this.size() >= 3 && this.size() <= 20'
  }];
  // 模板内容
  string content = 2;
  // 模板类型
  AlarmSendType sendType = 3;
  // 备注
  string remark = 4[(buf.validate.field).cel = {
    message: "备注长度限制在0-500个字符",
    expression: "this.size() <= 500"
  }];
  // 状态
  Status status = 5;
}
message CreateSendTemplateReply {}

message UpdateSendTemplateRequest {
  uint32 id = 1 [(buf.validate.field).required = true];
  CreateSendTemplateRequest data = 2 [(buf.validate.field).required = true];
}
message UpdateSendTemplateReply {}

message DeleteSendTemplateRequest {
  uint32 id = 1 [(buf.validate.field).required = true];
}
message DeleteSendTemplateReply {}

message GetSendTemplateRequest {
  uint32 id = 1 [(buf.validate.field).required = true];
}
message GetSendTemplateReply {
  SendTemplateItem detail = 1;
}

message ListSendTemplateRequest {
  // 分页参数
  PaginationReq pagination = 1 [(buf.validate.field).required = true];
  // 关键字模糊查询
  string keyword = 2 [(buf.validate.field).cel = {
    message: "关键字模糊查询长度限制在0-20个字符",
    expression: "this.size() <= 20"
  }];
  // 模板类型
  AlarmSendType sendType = 3;
  // 状态查询
  Status status = 4;
}
message ListSendTemplateReply {
  // 列表数据
  repeated SendTemplateItem list = 1;
  // 分页信息
  PaginationReply pagination = 2;
}

message UpdateStatusRequest {
  repeated uint32  id = 1[(buf.validate.field).cel = {
    message: "必须保证修改对象数据唯一",
    expression: "this.unique()"
  }];
  Status status = 2 [(buf.validate.field).cel = {
    message: "请选择状态",
    expression: "this > 0"
  }];
}
message UpdateStatusReply {}