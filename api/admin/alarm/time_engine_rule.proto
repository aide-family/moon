syntax = "proto3";

package api.admin.alarm;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "admin/model.proto";
import "global.proto";
import "enum.proto";

option go_package = "github.com/aide-family/moon/api/admin/alarm;alarm";
option java_multiple_files = true;
option java_package = "api.admin.alarm";

// 时间引擎规则管理模块
service TimeEngineRule {
  // 创建时间引擎规则
  rpc CreateTimeEngineRule (CreateTimeEngineRuleRequest) returns (CreateTimeEngineRuleReply) {
    option (google.api.http) = {
      post: "/v1/admin/alarm/time_engine_rule/create"
      body: "*"
    };
  }
  // 更新时间引擎规则
  rpc UpdateTimeEngineRule (UpdateTimeEngineRuleRequest) returns (UpdateTimeEngineRuleReply) {
    option (google.api.http) = {
      put: "/v1/admin/alarm/time_engine_rule/update"
      body: "*"
    };
  }
  // 删除时间引擎规则
  rpc DeleteTimeEngineRule (DeleteTimeEngineRuleRequest) returns (DeleteTimeEngineRuleReply) {
    option (google.api.http) = {
      delete: "/v1/admin/alarm/time_engine_rule/delete/{id}"
    };
  }
  // 获取时间引擎规则
  rpc GetTimeEngineRule (GetTimeEngineRuleRequest) returns (GetTimeEngineRuleReply) {
    option (google.api.http) = {
      get: "/v1/admin/alarm/time_engine_rule/get/{id}"
    };
  }
  // 获取时间引擎规则列表
  rpc ListTimeEngineRule (ListTimeEngineRuleRequest) returns (ListTimeEngineRuleReply) {
    option (google.api.http) = {
      post: "/v1/admin/alarm/time_engine_rule/list"
      body: "*"
    };
  }
  // 批量更新时间引擎规则状态
  rpc BatchUpdateTimeEngineRuleStatus (BatchUpdateTimeEngineRuleStatusRequest) returns (BatchUpdateTimeEngineRuleStatusReply) {
    option (google.api.http) = {
      put: "/v1/admin/alarm/time_engine_rule/status"
      body: "*"
    };
  }

  // 创建时间引擎
  rpc CreateTimeEngine (CreateTimeEngineRequest) returns (CreateTimeEngineReply) {
    option (google.api.http) = {
      post: "/v1/admin/alarm/time_engine/create"
      body: "*"
    };
  }

  // 更新时间引擎
  rpc UpdateTimeEngine (UpdateTimeEngineRequest) returns (UpdateTimeEngineReply) {
    option (google.api.http) = {
      put: "/v1/admin/alarm/time_engine/update"
      body: "*"
    };
  }

  // 删除时间引擎
  rpc DeleteTimeEngine (DeleteTimeEngineRequest) returns (DeleteTimeEngineReply) {
    option (google.api.http) = {
      delete: "/v1/admin/alarm/time_engine/delete/{id}"
    };
  }

  // 获取时间引擎
  rpc GetTimeEngine (GetTimeEngineRequest) returns (GetTimeEngineReply) {
    option (google.api.http) = {
      get: "/v1/admin/alarm/time_engine/get/{id}"
    };
  }

  // 获取时间引擎列表
  rpc ListTimeEngine (ListTimeEngineRequest) returns (ListTimeEngineReply) {
    option (google.api.http) = {
      post: "/v1/admin/alarm/time_engine/list"
      body: "*"
    };
  }

  // 批量更新时间引擎状态
  rpc BatchUpdateTimeEngineStatus (BatchUpdateTimeEngineStatusRequest) returns (BatchUpdateTimeEngineStatusReply) {
    option (google.api.http) = {
      put: "/v1/admin/alarm/time_engine/status"
      body: "*"
    };
  }
}

// 创建时间引擎规则请求
message CreateTimeEngineRuleRequest {
  // 规则名称
  string name = 1 [(buf.validate.field).cel = {
    expression: "this.size() > 0 && this.size() < 64",
    message: "规则名称长度必须在1到64之间"
  }];
  // 规则类型
  int32 category = 2 [(buf.validate.field).cel = {
    expression: "this >= 1 && this < 5",
    message: "规则类型必须在1到5之间"
  }];
  // 规则
  repeated int32 rules = 3 [(buf.validate.field).cel = {
    expression: "this.size() > 0",
    message: "规则不能为空"
  }];
  // 状态
  optional int32 status = 4 [(buf.validate.field).cel = {
    expression: "this == 1 || this == 2",
    message: "状态必须为1:启用,2:禁用"
  }];
  // 备注
  string remark = 5 [(buf.validate.field).cel = {
    expression: "this.size() < 255",
    message: "备注长度不能超过255"
  }];
}
// 创建时间引擎规则返回
message CreateTimeEngineRuleReply {}

// 更新时间引擎规则请求
message UpdateTimeEngineRuleRequest {
  // 规则ID
  uint32 id = 1 [(buf.validate.field).cel = {
    expression: "this > 0",
    message: "更新必须指定规则"
  }];
  // 明细数据
  CreateTimeEngineRuleRequest data = 2;
}
// 更新时间引擎规则返回
message UpdateTimeEngineRuleReply {}

// 删除时间引擎规则请求
message DeleteTimeEngineRuleRequest {
  // 规则ID
  uint32 id = 1 [(buf.validate.field).cel = {
    expression: "this > 0",
    message: "删除必须指定规则"
  }];
}
// 删除时间引擎规则返回
message DeleteTimeEngineRuleReply {}

// 获取时间引擎规则请求
message GetTimeEngineRuleRequest {
  // 规则ID
  uint32 id = 1 [(buf.validate.field).cel = {
    expression: "this > 0",
    message: "获取详情必须指定规则"
  }];
}
// 获取时间引擎规则返回
message GetTimeEngineRuleReply {
  // 规则
  TimeEngineRuleItem detail = 1;
}

// 获取时间引擎规则列表请求
message ListTimeEngineRuleRequest {
  // 分页
  PaginationReq pagination = 1;
  // 模糊查询
  string keyword = 2;
  // 状态
  int32 status = 3;
  // 规则类型
  int32 category = 4;
}
// 获取时间引擎规则列表返回
message ListTimeEngineRuleReply {
  // 规则列表
  repeated TimeEngineRuleItem list = 1;
  // 分页
  PaginationReply pagination = 2;
}

// 批量更新时间引擎规则状态请求
message BatchUpdateTimeEngineRuleStatusRequest {
  // 规则ID列表
  repeated uint32 ids = 1;
  // 状态
  Status status = 2;
}
// 批量更新时间引擎规则状态返回
message BatchUpdateTimeEngineRuleStatusReply {}

// 创建时间引擎请求
message CreateTimeEngineRequest {
  // 引擎名称
  string name = 1 [(buf.validate.field).cel = {
    expression: "this.size() > 0 && this.size() < 64",
    message: "引擎名称长度必须在1到64之间"
  }];
  // 引擎规则列表
  repeated uint32 rules = 2;
  // 状态
  optional Status status = 3 [(buf.validate.field).cel = {
    expression: "this == 1 || this == 2",
    message: "状态必须为1:启用,2:禁用"
  }];
  // 备注
  string remark = 4 [(buf.validate.field).cel = {
    expression: "this.size() < 255",
    message: "备注长度不能超过255"
  }];
}
// 创建时间引擎返回
message CreateTimeEngineReply {}

// 更新时间引擎请求
message UpdateTimeEngineRequest {
  // 引擎ID
  uint32 id = 1 [(buf.validate.field).cel = {
    expression: "this > 0",
    message: "更新必须指定引擎"
  }];
  // 明细数据
  CreateTimeEngineRequest data = 2;
}
// 更新时间引擎返回
message UpdateTimeEngineReply {}

// 删除时间引擎请求
message DeleteTimeEngineRequest {
  // 引擎ID
  uint32 id = 1 [(buf.validate.field).cel = {
    expression: "this > 0",
    message: "删除必须指定引擎"
  }];
}
// 删除时间引擎返回
message DeleteTimeEngineReply {}

// 获取时间引擎请求
message GetTimeEngineRequest {
  // 引擎ID
  uint32 id = 1 [(buf.validate.field).cel = {
    expression: "this > 0",
    message: "获取详情必须指定引擎"
  }];
}
// 获取时间引擎返回
message GetTimeEngineReply {
  // 引擎
  TimeEngineItem detail = 1;
}

// 获取时间引擎列表请求
message ListTimeEngineRequest {
  // 分页
  PaginationReq pagination = 1;
  // 模糊查询
  string keyword = 2;
  // 状态
  Status status = 3;
}
// 获取时间引擎列表返回
message ListTimeEngineReply {
  // 引擎列表
  repeated TimeEngineItem list = 1;
  // 分页
  PaginationReply pagination = 2;
}
// 批量更新时间引擎状态请求
message BatchUpdateTimeEngineStatusRequest {
  // 引擎ID列表
  repeated uint32 ids = 1;
  // 状态
  Status status = 2;
}
// 批量更新时间引擎状态返回
message BatchUpdateTimeEngineStatusReply {} 

