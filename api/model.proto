syntax = "proto3";

package api;

import "validate/validate.proto";
import "base.proto";
import "system.proto";

option go_package = "prometheus-manager/api;api";
option java_multiple_files = true;
option java_package = "api";

// 告警历史基础类型
message AlarmHistoryV1 {
  // 报警历史ID
  uint32 id = 1;
  // 报警ID
  uint32 alarmId = 2;
  // 报警名称
  string alarmName = 3;
  // 报警级别
  DictSelectV1 alarmLevel = 4;
  // 报警状态
  string alarmStatus = 5;
  // 报警标签
  map<string, string> labels = 6;
  // 报警注解
  map<string, string> annotations = 7;
  // 开始时间, unix时间戳
  int64 startAt = 8;
  // 结束时间, unix时间戳
  int64 endAt = 9;
  // 持续时间
  string duration = 10;
  // 告警规则
  string expr = 11;
  // 数据源
  string datasource = 12;
}

// 字典基础类型
message DictV1 {
  // 字典ID
  uint32 id = 1;
  // 字典名称
  string name = 2;
  // 字典分类
  int32 category = 3;
  // 字典颜色
  string color = 4;
  // 字典状态
  int32 status = 5;
  // 字典备注
  string remark = 6;
  // 创建时间, unix时间戳
  int64 createdAt = 7;
  // 更新时间, unix时间戳
  int64 updatedAt = 8;
  // 删除时间, unix时间戳
  int64 deletedAt = 9;
}

// 字典选择类型
message DictSelectV1 {
  // 字典值, 对应字典的id
  uint32 value = 1;
  // 字典标签, 对应字典的name
  string label = 2;
  // 字典分类
  Category category = 3;
  // 字典颜色
  string color = 4;
  // 字典状态
  Status status = 5;
  // 字典备注
  string remark = 6;
  // 是否已删除
  bool isDeleted = 7;
}

// 策略基础类型
message PromStrategyV1 {
  // 策略ID
  uint32 id = 1;
  // 告警名称
  string alert = 2;
  // 表达式
  string expr = 3;
  // 持续时间
  Duration duration = 4;
  // 标签
  map<string, string> labels = 5;
  // 注解
  map<string, string> annotations = 6;
  // 策略状态
  int32 status = 7;
  // 策略组ID
  uint32 groupId = 8;
  // 策略组信息
  PromGroupSelectV1 groupInfo = 9;
  // 告警级别ID
  uint32 alarmLevelId = 10;
  // 告警级别信息
  DictSelectV1 alarmLevelInfo = 11;
  // 告警页面ID列表
  repeated uint32 alarmPageIds = 12;
  // 告警页面信息
  repeated DictSelectV1 alarmPageInfo = 13;
  // 分类ID列表
  repeated uint32 categoryIds = 14;
  // 分类信息
  repeated DictSelectV1 categoryInfo = 15;
  // 创建时间, unix时间戳
  int64 createdAt = 16;
  // 更新时间, unix时间戳
  int64 updatedAt = 17;
  // 删除时间, unix时间戳
  int64 deletedAt = 18;
  // 策略备注
  string remark = 19;
  // 数据源
  PrometheusServerSelectItem dataSource = 20;
  uint32 dataSourceId = 21;
  // 最大抑制时常
  Duration maxSuppress = 22;
  // 告警通知间隔
  Duration sendInterval = 23;
  // 是否发送告警通知
  bool sendRecover = 24;
}

// 策略选择类型
message PromStrategySelectV1 {
  // 策略值, 对应策略的id
  uint32 value = 1;
  // 策略标签, 对应策略的alert
  string label = 2;
  // 策略分类
  repeated DictSelectV1 category = 3;
  // 策略状态
  int32 status = 4;
}

// 策略组基础类型
message PromGroup {
  // 策略组ID
  uint32 id = 1;
  // 策略组名称
  string name = 2;
  // 策略组分类
  repeated DictSelectV1 categories = 3;
  // 策略组状态
  int32 status = 4;
  // 策略组备注
  string remark = 5;
  // 创建时间, unix时间戳
  int64 createdAt = 6;
  // 更新时间, unix时间戳
  int64 updatedAt = 7;
  // 删除时间, unix时间戳
  int64 deletedAt = 8;
  // 策略数量
  int64 strategyCount = 9;
  // 启用中的策略数量
  int64 enableStrategyCount = 10;
  // 策略列表(用于agent加载规则, 普通列表查询时候没有数据)
  repeated PromStrategyV1 strategies = 11;
}

// 策略组选择类型
message PromGroupSelectV1 {
  // 策略组值, 对应策略组的id
  uint32 value = 1;
  // 策略组标签, 对应策略组的name
  string label = 2;
  // 策略组分类
  repeated DictSelectV1 category = 3;
  // 策略组状态
  int32 status = 4;
  // 策略组备注
  string remark = 5;
}

// 告警数据基础类型
message AlarmData {
  // 接收者
  string receiver = 1;
  // 状态
  string status = 2;
  // 报警列表
  repeated Alert alerts = 3;
  // 组标签
  map<string, string> groupLabels = 4;
  // 公共标签
  map<string, string> commonLabels = 5;
  // 公共注解
  map<string, string> commonAnnotations = 6;
  // 外部链接
  string externalURL = 7;
  // 版本
  string version = 8;
  // 组键
  string groupKey = 9;
  // 被截断的告警数量
  int32 truncatedAlerts = 10;
}

// 告警基础类型
message Alert {
  // 状态
  string status = 1;
  // 标签
  map<string, string> labels = 2;
  // 注解
  map<string, string> annotations = 3;
  // 开始时间, unix时间戳
  int64 startsAt = 4;
  // 结束时间, unix时间戳
  int64 endsAt = 5;
  // 生成页面链接
  string generatorURL = 6;
  // 指纹
  string fingerprint = 7;
}

// Prometheus服务端点基础类型
message PrometheusServerItem {
  // 端点ID
  uint32 id = 1;
  // 采集器名称
  string name = 2;
  // 端点
  string endpoint = 3;
  // 端点状态
  int32 status = 4;
  // 备注
  string remark = 5;
  // 创建时间, unix时间戳
  int64 createdAt = 6;
  // 更新时间, unix时间戳
  int64 updatedAt = 7;
}

// Prometheus服务端点选择类型(用于下拉列表)
message PrometheusServerSelectItem {
  // 端点值, 对应端点的id
  uint32 value = 1;
  // 端点标签, 对应端点的name
  string label = 2;
  // 端点状态
  int32 status = 3;
  // 备注
  string remark = 4;
  // 端点
  string endpoint = 5;
}

// 告警通知的hook群组基础类型
message ChatGroup {
  // 群组ID
  uint32 id = 1;
  // 群组名称
  string name = 2;
  // 备注
  string remark = 3;
  // 创建时间, unix时间戳
  int64 createdAt = 4;
  // 更新时间, unix时间戳
  int64 updatedAt = 5;
  // 钩子
  string hook = 6;
  // 群组状态
  int32 status = 7;
  // 通知应用
  int32 app = 8;
  // 钩子名称
  string hookName = 9;
  // 消息模板
  string template = 10;
  // 密钥
  string secret = 12;
  // 创建者
  UserSelectV1 createUser = 13;
}

// 告警通知的hook群组选择类型
message ChatGroupSelectV1 {
  // 群组值, 对应群组的id
  uint32 value = 1;
  // 所属APP
  int32 app = 2;
  // 群组标签, 对应群组的name
  string label = 4;
  // 群组状态
  int32 status = 5;
}

// 通知基础类型
message BeNotifyMember {
  // 通知人ID, 对应用户的id
  uint32 memberId = 1 [(validate.rules).uint32.gt = 0];
  // 通知方式, 可以同时多种类型
  repeated NotifyType notifyTypes = 2 [(validate.rules).repeated = {
    min_items: 1
    unique: true
    items: {
      enum: {
        defined_only: true
        not_in: [0]
      }
    }
  }];
  // 数据ID
  uint32 id = 3;
}
// 通知成员详情
message BeNotifyMemberDetail {
  // 通知人ID, 对应用户的id
  uint32 memberId = 1;
  // 通知方式, 可以同时多种类型
  repeated int32 notifyTypes = 2;
  // 通知人明细
  UserSelectV1 user = 3;
  // 通知人状态
  int32 status = 4;
  // 数据ID
  uint32 id = 5;
}

// 通知基础类型
message NotifyV1 {
  // 通知ID
  uint32 id = 1;
  // 通知名称
  string name = 2;
  // 备注
  string remark = 3;
  // 状态
  int32 status = 4;
  // 通知成员
  repeated BeNotifyMemberDetail members = 5;
  // 通知群组
  repeated ChatGroupSelectV1 chatGroups = 6;
  // 创建时间, unix时间戳
  int64 createdAt = 7;
  // 更新时间, unix时间戳
  int64 updatedAt = 8;
  // 删除时间, unix时间戳
  int64 deletedAt = 9;
  // 外部通知对象
  repeated ExternalNotifyObj externalNotifyObjs = 10;
}

// 外部通知对象
message ExternalNotifyObj {
  // 外部通知对象ID
  uint32 id = 1;
  // 外部通知对象名称
  string name = 2;
  // 外部通知对象说明
  string remark = 3;
  // 外部通知对象状态
  int32 status = 4;
  // 外部客户列表
  repeated ExternalCustomer externalCustomerList = 5;
  // 外部客户hook列表
  repeated ExternalCustomerHook externalCustomerHookList = 6;
  // 创建时间
  int64 createdAt = 7;
  // 更新时间
  int64 updatedAt = 10;
  // 删除时间
  int64 deletedAt = 11;
}

// 外部客户
message ExternalCustomer {
  // 外部客户ID
  uint32 id = 1;
  // 外部客户名称
  string name = 2;
  // 外部客户说明
  string remark = 3;
  // 外部客户状态
  int32 status = 4;
  // 外部客户地址
  string addr = 5;
  // 外部客户联系人
  string contact = 6;
  // 外部客户联系方式
  string phone = 7;
  // 外部客户邮箱
  string email = 8;
  // 创建时间
  int64 createdAt = 9;
  // 更新时间
  int64 updatedAt = 10;
  // 删除时间
  int64 deletedAt = 11;
  // 外部客户钩子列表
  repeated ExternalCustomerHook externalCustomerHookList = 12;
}

// 外部客户钩子
message ExternalCustomerHook {
  // 外部客户钩子ID
  uint32 id = 1;
  // 外部客户钩子名称
  string hookName = 2;
  // 外部客户钩子说明
  string remark = 3;
  // 外部客户钩子状态
  int32 status = 4;
  // 外部客户ID
  uint32 customerId = 5;
  // 外部客户钩子地址
  string hook = 6;
  // 外部客户钩子类型
  int32 notifyApp = 7;
  // 创建时间
  int64 createdAt = 8;
  // 更新时间
  int64 updatedAt = 9;
  // 删除时间
  int64 deletedAt = 10;
}

// 通知选择类型
message NotifySelectV1 {
  // 通知值, 对应通知的id
  uint32 value = 1;
  // 通知标签, 对应通知的name
  string label = 2;
  // 备注
  string remark = 3;
  // 状态
  int32 status = 4;
}

// 介入信息
message InterveneInfo {
  // 介入人
  UserSelectV1 intervenedUser = 1;
  // 介入时间, unix时间戳
  int64 intervenedAt = 2;
  // 介入备注
  string remark = 3;
  // 主键
  uint32 id = 4;
}

// 告警升级信息
message AlarmUpgradeInfo {
  // 升级人
  UserSelectV1 upgradedUser = 1;
  // 升级时间, unix时间戳
  int64 upgradedAt = 2;
  // 升级备注
  string remark = 3;
  // 主键
  uint32 id = 4;
}

// 告警抑制信息
message AlarmSuppressInfo {
  // 抑制人
  UserSelectV1 suppressedUser = 1;
  // 抑制时间, unix时间戳
  int64 suppressedAt = 2;
  // 抑制备注
  string remark = 3;
  // 抑制时长, 单位: 秒
  int64 duration = 4;
  // 主键
  uint32 id = 5;
}

// 实时告警数据明细
message RealtimeAlarmData {
  // 告警ID
  uint32 id = 1;
  // 实例
  string instance = 2;
  // 告警内容
  string note = 3;
  // 告警级别
  uint32 levelId = 4;
  // 告警时间, unix时间戳
  int64 eventAt = 5;
  // 告警状态
  int32 status = 6;
  // 介入信息
  repeated InterveneInfo intervenedUser = 8;
  // 已通知的对象
  repeated BeNotifyMemberDetail beenNotifyMembers = 9;
  // 通知时间, unix时间戳
  int64 notifiedAt = 10;
  // 报警历史ID, 可以通过报警历史ID查询报警更加原始的信息
  uint32 historyId = 11;
  // 升级信息
  AlarmUpgradeInfo upgradedUser = 12;
  // 抑制信息
  AlarmSuppressInfo suppressedUser = 13;
  // 所属策略ID
  uint32 strategyId = 14;
  // 已通知的群组
  repeated ChatGroupSelectV1 notifiedChatGroups = 15;
  // 创建时间
  int64 createdAt = 16;
  // 更新时间
  int64 updatedAt = 17;
  // 告警等级
  DictSelectV1 level = 18;
  // 策略详情
  PromStrategyV1 strategy = 19;
  // 持续时间
  string duration = 20;
}

message Duration {
  int64 value = 1 [(validate.rules).int64.gt = 0];
  string unit = 2 [(validate.rules).string = {
    in: ["s", "m", "h", "d"]
  }];
}

message GroupSimple {
  // 策略组ID
  uint32 id = 1;
  // 策略组名称
  string name = 2;
  repeated StrategySimple strategies = 3;
}

message StrategySimple {
  // 策略ID
  uint32 id = 1;
  // 告警名称
  string alert = 2;
  // 表达式
  string expr = 3;
  // 持续时间
  Duration duration = 4;
  // 标签
  map<string, string> labels = 5;
  // 注解
  map<string, string> annotations = 6;
  // 策略组ID
  uint32 groupId = 7;
  // 告警级别ID
  uint32 alarmLevelId = 8;
  // 数据源
  string endpoint = 9;
}

message MyChart {
  // 图表标题
  string title = 1;
  // 图表说明
  string remark = 2;
  // 图表url
  string url = 3;
  uint32 id = 4;
  int32 status = 5;
}

message MyDashboardConfig {
  // 仪表板ID
  uint32 id = 1;
  // 仪表板名称
  string title = 2;
  // 仪表板说明
  string remark = 3;
  // 仪表板创建时间, unix时间戳
  int64 createdAt = 4;
  // 仪表板更新时间, unix时间戳
  int64 updatedAt = 5;
  // 仪表板删除时间, unix时间戳
  int64 deletedAt = 6;
  string color = 7;
  // 图表列表
  repeated MyChart charts = 8;
  int32 status = 9;
}

message MyDashboardConfigOption {
  uint32 value = 1;
  string label = 2;
  string color = 3;
}

// Prometheus原始规则
message PromRule {
  // 规则名称
  string alert = 1 [(validate.rules).string = {
    min_len: 1,
    max_len: 255,
//    pattern: "^[a-zA-Z0-9_]+$"
  }];
  // 规则表达式
  string expr = 2 [(validate.rules).string = {
    min_len: 1
  }];
  // 规则标签
  map<string, string> labels = 3 [(validate.rules).map = {
    min_pairs: 1
    max_pairs: 100
    keys: {
      string: {pattern: "^[a-zA-Z0-9_]+$", min_len: 1, max_len: 32}
    }
  }];
  // 注解
  map<string, string> annotations = 4 [(validate.rules).map = {
    min_pairs: 1
    max_pairs: 100
    keys: {
      string: {pattern: "^[a-zA-Z0-9_]+$", min_len: 1, max_len: 32}
    }
  }];
  // 持续时间
  string for = 5 [(validate.rules).string = {
    min_len: 2,
  }];
}

// Prometheus原始规则组
message PromRuleGroup {
  // 规则组名称
  string name = 1 [(validate.rules).string = {
    min_len: 1,
    max_len: 32,
//    pattern: "^[a-zA-Z0-9_]+$"
  }];
  // Prometheus原始规则列表
  repeated PromRule rules = 2 [(validate.rules).repeated = {
    max_items: 100
  }];
}