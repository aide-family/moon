syntax = "proto3";

package api.dict;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "model.proto";
import "base.proto";

option go_package = "prometheus-manager/api/dict;dict";
option java_multiple_files = true;
option java_package = "api.dict";


// 字典管理模块相关接口
service Dict {
	// 创建字典
	rpc CreateDict (CreateDictRequest) returns (CreateDictReply) {
		option (google.api.http) = {
			post: "/api/v1/dict/create"
			body: "*"
		};
	}

	// 更新字典
	rpc UpdateDict (UpdateDictRequest) returns (UpdateDictReply) {
		option (google.api.http) = {
			post: "/api/v1/dict/update"
			body: "*"
		};
	}

	// 更新字典状态
	rpc BatchUpdateDictStatus (BatchUpdateDictStatusRequest) returns (BatchUpdateDictStatusReply) {
		option (google.api.http) = {
			post: "/api/v1/dict/status/update/batch"
			body: "*"
		};
	}

	// 删除字典
	rpc DeleteDict (DeleteDictRequest) returns (DeleteDictReply) {
		option (google.api.http) = {
			post: "/api/v1/dict/delete"
			body: "*"
		};
	}

	// 删除字典列表
	rpc BatchDeleteDict (BatchDeleteDictRequest) returns (BatchDeleteDictReply) {
		option (google.api.http) = {
			post: "/api/v1/dict/batch/delete"
			body: "*"
		};
	}

	// 获取字典
	rpc GetDict (GetDictRequest) returns (GetDictReply) {
		option (google.api.http) = {
			post: "/api/v1/dict/get"
			body: "*"
		};
	}

	// 获取字典列表
	rpc ListDict (ListDictRequest) returns (ListDictReply) {
		option (google.api.http) = {
			post: "/api/v1/dict/list"
			body: "*"
		};
	}

	// 获取字典列表, 用于下拉选择
	rpc SelectDict (SelectDictRequest) returns (SelectDictReply) {
		option (google.api.http) = {
			post: "/api/v1/dict/select"
			body: "*"
		};
	}
}

// 创建字典请求参数
message CreateDictRequest {
	// 字典名称, 长度1-20
	string name = 2 [(validate.rules).string = {min_len: 1, max_len: 20}];
	// 字典分类 枚举类型
	Category category = 3 [(validate.rules).enum = {defined_only: true, not_in: [0]}];
	// 字典颜色, 用于前端渲染tag相关颜色用, 非必需
	string color = 4;
	// 字典备注
	string remark = 6;
}
// 创建字典响应参数
message CreateDictReply {
	// 创建成功后的字典ID
	uint32 id = 1;
}

// 更新字典请求参数
message UpdateDictRequest {
	// 需要更新的字典ID
	uint32 id = 1 [(validate.rules).uint32.gt = 0];
	// 字典名称
	string name = 2 [(validate.rules).string = {min_len: 1, max_len: 20}];
	// 字典分类
	Category category = 3 [(validate.rules).enum = {defined_only: true, not_in: [0]}];
	// 字典颜色
	string color = 4 [(validate.rules).string = {max_len: 10}];
	// 字典备注
	string remark = 6 [(validate.rules).string = {max_len: 255}];
	// 状态
	Status status = 7 [(validate.rules).enum = {defined_only: true}];
}
// 更新字典响应参数
message UpdateDictReply {
	// 更新成功后的字典ID
	uint32 id = 1;
}

// 更新字典状态请求参数
message BatchUpdateDictStatusRequest {
	// 需要更新的字典ID列表
	repeated uint32 ids = 1 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.unique = true];
	// 字典状态
	Status status = 2 [(validate.rules).enum = {defined_only: true, not_in: [0]}];
}
// 更新字典状态响应参数
message BatchUpdateDictStatusReply {
	// 更新成功后的字典ID列表
	repeated uint32 ids = 1;
}

// 删除字典请求参数
message DeleteDictRequest {
	// 需要删除的字典ID
	uint32 id = 1 [(validate.rules).uint32.gt = 0];
}
// 删除字典响应参数
message DeleteDictReply {
	// 删除成功后的字典ID
	uint32 id = 1;
}

// 批量删除字典列表请求参数
message BatchDeleteDictRequest {
	// 需要删除的字典ID列表
	repeated uint32 ids = 1 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.unique = true];
}
// 批量删除字典列表响应参数
message BatchDeleteDictReply {
	// 删除成功后的字典ID列表
	repeated uint32 ids = 1;
}

// 获取字典请求参数
message GetDictRequest {
	// 需要获取的字典ID
	uint32 id = 1 [(validate.rules).uint32.gt = 0];
	// 是否获取已删除的字典
	bool isDeleted = 2;
}
// 获取字典响应参数
message GetDictReply {
	// 字典详情
	DictV1 promDict = 1;
}

// 获取字典列表请求参数参数
message ListDictRequest {
	// 是否获取已删除的字典
	bool isDeleted = 1;
	// 分页参数
	PageRequest page = 2;
	// 关键字
	string keyword = 3 [(validate.rules).string = {max_len: 20}];
	// 分类
	Category category = 4;
	// 状态
	Status status = 5;
}
// 获取字典列表响应参数
message ListDictReply {
	// 分页参数
	PageReply page = 1;
	// 字典列表
	repeated DictV1 list = 2;
}

// 获取字典列表请求参数
message SelectDictRequest {
	// 是否获取已删除的字典
	bool isDeleted = 1;
	// 分页参数
	PageRequest page = 2;
	// 关键字
	string keyword = 3 [(validate.rules).string = {max_len: 20}];
	// 分类
	Category category = 4;
	// 状态
	Status status = 5;
}
// 获取字典列表响应参数
message SelectDictReply {
	// 分页参数
	PageReply page = 1;
	// 字典列表
	repeated DictSelectV1 list = 2;
}