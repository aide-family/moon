syntax = "proto3";

package api.rabbit.v1;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "rabbit/common/hook.proto";
import "rabbit/common/email.proto";
import "rabbit/common/sms.proto";
import "rabbit/common/common.proto";

option go_package = "github.com/moon-monitor/moon/pkg/api/rabbit/v1;v1";

service Send {
  rpc Email (SendEmailRequest) returns (rabbit.common.EmptyReply) {
    option (google.api.http) = {
      post: "/v1/send/email"
      body: "*"
    };
  }

  rpc Sms (SendSmsRequest) returns (rabbit.common.EmptyReply) {
    option (google.api.http) = {
      post: "/v1/send/sms"
      body: "*"
    };
  }

  rpc Hook (SendHookRequest) returns (rabbit.common.EmptyReply) {
    option (google.api.http) = {
      post: "/v1/send/hook"
      body: "*"
    };
  }
}

message SendEmailRequest {
  string requestId = 1 [(buf.validate.field).required = true, (buf.validate.field).string = {
    min_len: 32,
    max_len: 36,
  }];
  repeated string emails = 2 [(buf.validate.field).cel = {
    expression: "this.size() > 0 && this.size() < 100"
    message: "emails must be between 1 and 100"
  }];
  string body = 3 [(buf.validate.field).required = true];
  string subject = 4 [(buf.validate.field).required = true];
  string contentType = 5;
  string attachment = 6;
  repeated string cc = 7;
  optional api.rabbit.common.EmailConfig emailConfig = 8;
  optional string configName = 9;
  string teamId = 10 [(buf.validate.field).required = true];
}

message SendSmsRequest {
  string requestId = 1 [(buf.validate.field).required = true, (buf.validate.field).string = {
    min_len: 32,
    max_len: 36,
  }];
  repeated string phones = 2 [(buf.validate.field).cel = {
    message: "phones must be between 1 and 10"
    expression: "this.size() >= 1 && this.size() <= 100"
  }];
  string templateParameters = 3 [(buf.validate.field).required = true];
  string templateCode = 4 [(buf.validate.field).required = true];
  optional api.rabbit.common.SMSConfig smsConfig = 5;
  optional string configName = 6;
  string teamId = 7 [(buf.validate.field).required = true];
}

message SendHookRequest {
  message Body {
    string appName = 1 [(buf.validate.field).required = true];
    string body = 2 [(buf.validate.field).required = true];
  }
  string requestId = 1 [(buf.validate.field).required = true, (buf.validate.field).string = {
    min_len: 32,
    max_len: 36,
  }];
  repeated api.rabbit.common.HookConfig hooks = 2 [(buf.validate.field).cel = {
    message: "hooks must be between 1 and 10"
    expression: "this.size() >= 1 && this.size() <= 100"
  }];
  repeated Body body = 3 [(buf.validate.field).required = true];
  string teamId = 4 [(buf.validate.field).required = true];
}

