syntax = "proto3";

package api.palace;

import "google/api/annotations.proto";
import "palace/common/common.proto";
import "palace/common/common_enum.proto";
import "palace/common/team_notice.proto";

option go_package = "github.com/moon-monitor/moon/pkg/api/palace;palace";

service TeamNotice {
  rpc SaveTeamNoticeHook (SaveTeamNoticeHookRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/team/notice/hook"
      body: "*"
    };
  }
  rpc UpdateTeamNoticeHookStatus (UpdateTeamNoticeHookStatusRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/team/notice/hook/status"
      body: "*"
    };
  }
  rpc DeleteTeamNoticeHook (DeleteTeamNoticeHookRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      delete: "/api/team/notice/hook"
    };
  }
  rpc GetTeamNoticeHook (GetTeamNoticeHookRequest) returns (api.palace.common.NoticeHookItem) {
    option (google.api.http) = {
      get: "/api/team/notice/hook"
    };
  }
  rpc ListTeamNoticeHook (ListTeamNoticeHookRequest) returns (ListTeamNoticeHookReply) {
    option (google.api.http) = {
      post: "/api/team/notice/hook/list"
      body: "*"
    };
  }
  rpc SaveTeamNoticeGroup (SaveTeamNoticeGroupRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/team/notice/group"
      body: "*"
    };
  }
  rpc UpdateTeamNoticeGroupStatus (UpdateTeamNoticeGroupStatusRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/team/notice/group/status"
      body: "*"
    };
  }
  rpc DeleteTeamNoticeGroup (DeleteTeamNoticeGroupRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      delete: "/api/team/notice/group"
    };
  }
  rpc GetTeamNoticeGroup (GetTeamNoticeGroupRequest) returns (api.palace.common.NoticeGroupItem) {
    option (google.api.http) = {
      get: "/api/team/notice/group"
    };
  }
  rpc ListTeamNoticeGroup (ListTeamNoticeGroupRequest) returns (ListTeamNoticeGroupReply) {
    option (google.api.http) = {
      post: "/api/team/notice/group/list"
      body: "*"
    };
  }
}

message SaveTeamNoticeHookRequest {
  string name = 1;
  string remark = 2;
  api.palace.common.GlobalStatus status = 3;
  string url = 4;
  string secret = 5;
  api.palace.common.HTTPMethod method = 6;
  map<string, string> headers = 7;
  api.palace.common.HookAPP app = 8;
  uint32 hookId = 9;
}

message UpdateTeamNoticeHookStatusRequest {
  uint32 hookId = 1;
  api.palace.common.GlobalStatus status = 2;
}

message DeleteTeamNoticeHookRequest {
  uint32 hookId = 1;
}

message GetTeamNoticeHookRequest {
  uint32 hookId = 1;
}

message ListTeamNoticeHookRequest {
  api.palace.common.PaginationRequest pagination = 1;
  repeated api.palace.common.HookAPP apps = 2;
  api.palace.common.GlobalStatus status = 3;
  string keyword = 4;
  string url = 5;
}
message ListTeamNoticeHookReply {
  api.palace.common.PaginationReply pagination = 1;
  repeated api.palace.common.NoticeHookItem items = 2;
}

message SaveTeamNoticeGroupRequest {
  message Member {
    uint32 memberId = 1;
    api.palace.common.NoticeType noticeType = 2;
  }
  string name = 1;
  string remark = 2;
  repeated uint32 hookIds = 4;
  repeated Member members = 5;
  uint32 groupId = 6;
  uint32 emailConfigId = 7;
  uint32 smsConfigId = 8;
}

message UpdateTeamNoticeGroupStatusRequest {
  uint32 groupId = 1;
  api.palace.common.GlobalStatus status = 2;
}

message DeleteTeamNoticeGroupRequest {
  uint32 groupId = 1;
}

message GetTeamNoticeGroupRequest {
  uint32 groupId = 1;
}

message ListTeamNoticeGroupRequest {
  api.palace.common.PaginationRequest pagination = 1;
  repeated uint32 memberIds = 2;
  api.palace.common.GlobalStatus status = 3;
  string keyword = 4;
  repeated uint32 hookIds = 5;
}
message ListTeamNoticeGroupReply {
  api.palace.common.PaginationReply pagination = 1;
  repeated api.palace.common.NoticeGroupItem items = 2;
}