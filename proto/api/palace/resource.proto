syntax = "proto3";

package api.palace;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "palace/common/system.proto";
import "palace/common/common.proto";
import "palace/common/common_enum.proto";

option go_package = "github.com/moon-monitor/moon/pkg/api/palace;palace";

// Resource service provides operations for managing resources
service Resource {
  // BatchUpdateResourceStatus updates the status of multiple resources
  rpc BatchUpdateResourceStatus (BatchUpdateResourceStatusRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/resource/batch/status"
      body: "*"
    };
  }

  // GetResource retrieves a resource by Id
  rpc GetResource (GetResourceRequest) returns (api.palace.common.ResourceItem) {
    option (google.api.http) = {
      get: "/api/resource/detail"
    };
  }

  // ListResource lists resources based on specified filters
  rpc ListResource (ListResourceRequest) returns (ListResourceReply) {
    option (google.api.http) = {
      post: "/api/resource/list"
      body: "*"
    };
  }
  
  // SaveResource creates or updates a resource
  rpc SaveResource (SaveResourceRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/resource/save"
      body: "*"
    };
  }

  // SaveMenu creates or updates a system menu
  rpc SaveMenu (SaveMenuRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/menu/save"
      body: "*"
    };
  }

  // GetMenu retrieves a menu by Id
  rpc GetMenu (GetMenuRequest) returns (api.palace.common.MenuTreeItem) {
    option (google.api.http) = {
      get: "/api/menu/detail"
    };
  }

  // GetResourceMenuTree returns the menu tree
  rpc GetResourceMenuTree (api.palace.common.EmptyRequest) returns (GetResourceMenuTreeReply) {
    option (google.api.http) = {
      get: "/api/menu/tree"
    };
  }

  // GetTeamResourceMenuTree returns the menu tree
  rpc GetTeamResourceMenuTree (api.palace.common.EmptyRequest) returns (GetResourceMenuTreeReply) {
    option (google.api.http) = {
      get: "/api/team/menu/tree"
    };
  }
}

// BatchUpdateResourceStatusRequest represents the request data for updating the status of multiple resources
message BatchUpdateResourceStatusRequest {
  // List of resource Ids to update
  repeated uint32 resourceIds = 1 [(buf.validate.field).required = true];
  // New status for the resources
  api.palace.common.GlobalStatus status = 2 [(buf.validate.field).required = true];
}

// GetResourceRequest represents the request data for retrieving a resource
message GetResourceRequest {
  // Id of the resource to retrieve
  uint32 resourceId = 1 [(buf.validate.field).required = true];
}

// ListResourceRequest represents the request data for listing resources
message ListResourceRequest {
  // List of statuses to filter resources by
  repeated api.palace.common.GlobalStatus status = 1;
  // Keyword to search resources by
  string keyword = 4;
  api.palace.common.PaginationRequest pagination = 2;
}

// ListResourceReply contains the response data for listing resources
message ListResourceReply {
  // List of resource items
  repeated api.palace.common.ResourceItem items = 1;
  api.palace.common.PaginationReply pagination = 2;
}

// GetMenuTreeReply contains the response data for retrieving the menu tree
message GetResourceMenuTreeReply {
  // List of menu items
  repeated api.palace.common.MenuTreeItem menus = 1;
}

// SaveResourceRequest represents the request data for creating or updating a resource
message SaveResourceRequest {
  // Id of the resource (0 for create, >0 for update)
  uint32 resourceId = 1;
  // Name of the resource
  string name = 2 [(buf.validate.field).required = true];
  // Path of the resource
  string path = 3 [(buf.validate.field).required = true];
  // Status of the resource
  api.palace.common.GlobalStatus status = 4 [(buf.validate.field).required = true];
  // Allow rule for the resource
  api.palace.common.ResourceAllow allow = 5 [(buf.validate.field).required = true];
  // Remark for the resource
  string remark = 6;
}

// GetMenuRequest represents the request data for retrieving a menu
message GetMenuRequest {
  // Id of the menu to retrieve
  uint32 menuId = 1 [(buf.validate.field).required = true];
}

// SaveMenuRequest represents the request data for creating or updating a system menu
message SaveMenuRequest {
  // Id of the menu (0 for create, >0 for update)
  uint32 menuId = 1;
  // Name of the menu
  string name = 2 [(buf.validate.field).required = true];
  // Path of the menu
  string path = 3 [(buf.validate.field).required = true];
  // Status of the menu
  api.palace.common.GlobalStatus status = 4 [(buf.validate.field).required = true];
  // Icon of the menu
  string icon = 5;
  // Parent menu Id (0 for root menu)
  uint32 parentId = 6;
  // Type of the menu
  api.palace.common.MenuType menuType = 7 [(buf.validate.field).required = true];
  repeated uint32 resourceIds = 8;
}
