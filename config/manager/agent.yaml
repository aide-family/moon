apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
  namespace: system
  labels:
    apps.prometheus.manager/name: prometheus-manager-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      apps.prometheus.manager/name: prometheus-manager-agent
  template:
    metadata:
      labels:
        apps.prometheus.manager/name: prometheus-manager-agent
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        - command:
            - /prometheus-manager-agent
          args:
            - --conf=/config/config.yaml
          image: controller:latest
          name: prometheus-manager-agent
          securityContext:
            allowPrivilegeEscalation: false
          #          // TODO: @梧桐 Supplemental Health Screening Services
          #          livenessProbe:
          #            httpGet:
          #              path: /healthz
          #              port: 8081
          #            initialDelaySeconds: 15
          #            periodSeconds: 20
          #          readinessProbe:
          #            httpGet:
          #              path: /readyz
          #              port: 8081
          #            initialDelaySeconds: 5
          #            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          volumeMounts:
            - mountPath: /config
              name: prometheus-manager-agent-config
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 64Mi
      serviceAccountName: prometheus-manager-agent
      terminationGracePeriodSeconds: 10
      volumes:
        - name: prometheus-manager-agent-config
          configMap:
            name: prometheus-manager-agent-config
