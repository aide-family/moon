kind: ConfigMap
apiVersion: v1
metadata:
  name: server-config
  namespace: system
data:
  config.yaml: |
    env:
      name: prometheus-manager_prom_server
      version: 0.0.1
      # local dev两种模式会自动migrate数据库
      env: local
      metadata:
        description: Prometheus Manager Server APP
        version: 0.0.1
        author: 梧桐
        license: MIT
        email: aidecloud@163.com
        url: https://github.com/aide-cloud/prometheus-manager
    
    server:
      http:
        addr: 0.0.0.0:8000
        timeout: 1s
      grpc:
        addr: 0.0.0.0:9000
        timeout: 1s
    
    # NOTE: 添加你自己的数据库，并增加prometheus_manager库，如果选择mysql, 则把sqllite部分注释, 主机配置需要根据自身的地址进行配置，下方redis配置同理
    data:
      database:
        driver: sqlite
        source: ../../deploy/sql/init_sqllite.db
        debug: true
        #  database:
        #    driver: mysql
        #    source: root:123456@tcp(host.docker.internal:3306)/prometheus_manager?charset=utf8mb4&parseTime=True&loc=Local
        #    debug: true
    # 配置redis则使用redis作为缓存
    #  redis:
    #    addr: host.docker.internal:6379
    #    password: redis#single#test
    #    read_timeout: 0.2s
    #    write_timeout: 0.2s
    # 开启redis配置，则使用redis作为缓存组件
    #  redis:
    #    addr: localhost:6379
    #    password: redis#single#test
    #    read_timeout: 0.2s
    #    write_timeout: 0.2s
    
    apiWhite:
      all:
        - /api.auth.Auth/Login
        - /api.auth.Auth/Captcha
        - /api.interflows.HookInterflow/Receive
    
      jwtApi:
    
      rbacApi:
        - /api.auth.Auth/Logout
        - /api.auth.Auth/RefreshToken
    
    log:
      filename: ./log/prometheus-server.log
      level: debug
      encoder: json
      maxSize: 2
      compress: true
    
    # 添加mq配置，则会使用mq通信
    #mq:
    #  kafka:
    #    groupId: http://localhost:8001/api/v1/interflows/receive
    #    endpoints:
    #      - localhost:9092
