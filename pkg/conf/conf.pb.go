// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 服务配置
type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 服务名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 服务元数据
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 服务http地址
	HttpEndpoint string `protobuf:"bytes,3,opt,name=httpEndpoint,proto3" json:"httpEndpoint,omitempty"`
	// grpc地址
	GrpcEndpoint string `protobuf:"bytes,4,opt,name=grpcEndpoint,proto3" json:"grpcEndpoint,omitempty"`
	// 网络类型
	Network string  `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	Secret  *string `protobuf:"bytes,6,opt,name=secret,proto3,oneof" json:"secret,omitempty"`
	// 上线时间
	StartTime string `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// 在线时长
	UpTime string `protobuf:"bytes,8,opt,name=upTime,proto3" json:"upTime,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Server) GetHttpEndpoint() string {
	if x != nil {
		return x.HttpEndpoint
	}
	return ""
}

func (x *Server) GetGrpcEndpoint() string {
	if x != nil {
		return x.GrpcEndpoint
	}
	return ""
}

func (x *Server) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *Server) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Server) GetUpTime() string {
	if x != nil {
		return x.UpTime
	}
	return ""
}

// http服务配置
type HTTPServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 网络类型
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// 服务地址
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// 读写超时时间
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *HTTPServer) Reset() {
	*x = HTTPServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPServer) ProtoMessage() {}

func (x *HTTPServer) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPServer.ProtoReflect.Descriptor instead.
func (*HTTPServer) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *HTTPServer) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *HTTPServer) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *HTTPServer) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// grpc服务配置
type GRPCServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 网络类型
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// 服务地址
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// 读写超时时间
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *GRPCServer) Reset() {
	*x = GRPCServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRPCServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPCServer) ProtoMessage() {}

func (x *GRPCServer) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPCServer.ProtoReflect.Descriptor instead.
func (*GRPCServer) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *GRPCServer) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GRPCServer) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *GRPCServer) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// jwt配置
type JWT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 签名密钥
	SignKey string `protobuf:"bytes,1,opt,name=sign_key,json=signKey,proto3" json:"sign_key,omitempty"`
	// 签发者
	Issuer string `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// 有效期
	Expire *durationpb.Duration `protobuf:"bytes,4,opt,name=expire,proto3" json:"expire,omitempty"`
	// 被允许的请求
	AllowList []string `protobuf:"bytes,5,rep,name=allow_list,json=allowList,proto3" json:"allow_list,omitempty"`
}

func (x *JWT) Reset() {
	*x = JWT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWT) ProtoMessage() {}

func (x *JWT) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWT.ProtoReflect.Descriptor instead.
func (*JWT) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *JWT) GetSignKey() string {
	if x != nil {
		return x.SignKey
	}
	return ""
}

func (x *JWT) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *JWT) GetExpire() *durationpb.Duration {
	if x != nil {
		return x.Expire
	}
	return nil
}

func (x *JWT) GetAllowList() []string {
	if x != nil {
		return x.AllowList
	}
	return nil
}

// 数据库配置
type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 驱动， 支持gorm即可
	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	// 数据库连接串
	Dsn string `protobuf:"bytes,2,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// 是否开启调试
	Debug bool `protobuf:"varint,3,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *Database) Reset() {
	*x = Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Database) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *Database) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

// redis配置
type Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 网络类型
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// 地址
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// 读写超时
	ReadTimeout  *durationpb.Duration `protobuf:"bytes,3,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout *durationpb.Duration `protobuf:"bytes,4,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	// 密码
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	// 数据库
	Db uint32 `protobuf:"varint,6,opt,name=db,proto3" json:"db,omitempty"`
	// 连接超时
	DialTimeout *durationpb.Duration `protobuf:"bytes,7,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`
}

func (x *Redis) Reset() {
	*x = Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redis) ProtoMessage() {}

func (x *Redis) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redis.ProtoReflect.Descriptor instead.
func (*Redis) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

func (x *Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Redis) GetDb() uint32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Redis) GetDialTimeout() *durationpb.Duration {
	if x != nil {
		return x.DialTimeout
	}
	return nil
}

// nuts db配置
type NutsDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据库路径
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// 缓存桶
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *NutsDB) Reset() {
	*x = NutsDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NutsDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NutsDB) ProtoMessage() {}

func (x *NutsDB) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NutsDB.ProtoReflect.Descriptor instead.
func (*NutsDB) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *NutsDB) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *NutsDB) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

// 内存缓存配置
type Free struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 内存缓存大小
	Size uint32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Free) Reset() {
	*x = Free{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Free) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Free) ProtoMessage() {}

func (x *Free) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Free.ProtoReflect.Descriptor instead.
func (*Free) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *Free) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 缓存配置
type Cache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// redis nuts-db  free
	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	// redis配置
	Redis *Redis `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	// nuts db配置
	NutsDB *NutsDB `protobuf:"bytes,3,opt,name=nutsDB,proto3" json:"nutsDB,omitempty"`
	// 内存缓存配置
	Free *Free `protobuf:"bytes,4,opt,name=free,proto3" json:"free,omitempty"`
}

func (x *Cache) Reset() {
	*x = Cache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cache) ProtoMessage() {}

func (x *Cache) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cache.ProtoReflect.Descriptor instead.
func (*Cache) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *Cache) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Cache) GetRedis() *Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Cache) GetNutsDB() *NutsDB {
	if x != nil {
		return x.NutsDB
	}
	return nil
}

func (x *Cache) GetFree() *Free {
	if x != nil {
		return x.Free
	}
	return nil
}

// 微服务配置
type MicroServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 服务地址
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// 密钥
	Secret *string `protobuf:"bytes,2,opt,name=secret,proto3,oneof" json:"secret,omitempty"`
	// 超时时间
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3,oneof" json:"timeout,omitempty"`
	// 网络类型， http, https, grpc
	Network string `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	// node版本
	NodeVersion string `protobuf:"bytes,5,opt,name=nodeVersion,proto3" json:"nodeVersion,omitempty"`
	// name 服务名
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MicroServer) Reset() {
	*x = MicroServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicroServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicroServer) ProtoMessage() {}

func (x *MicroServer) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicroServer.ProtoReflect.Descriptor instead.
func (*MicroServer) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *MicroServer) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *MicroServer) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *MicroServer) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *MicroServer) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *MicroServer) GetNodeVersion() string {
	if x != nil {
		return x.NodeVersion
	}
	return ""
}

func (x *MicroServer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// jaeger配置
type Jaeger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 端点
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *Jaeger) Reset() {
	*x = Jaeger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jaeger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jaeger) ProtoMessage() {}

func (x *Jaeger) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jaeger.ProtoReflect.Descriptor instead.
func (*Jaeger) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{10}
}

func (x *Jaeger) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

// 链路追踪配置
type Tracer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 驱动， 支持jaeger
	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	// jaeger配置
	Jaeger *Jaeger `protobuf:"bytes,2,opt,name=jaeger,proto3" json:"jaeger,omitempty"`
}

func (x *Tracer) Reset() {
	*x = Tracer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tracer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracer) ProtoMessage() {}

func (x *Tracer) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracer.ProtoReflect.Descriptor instead.
func (*Tracer) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{11}
}

func (x *Tracer) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Tracer) GetJaeger() *Jaeger {
	if x != nil {
		return x.Jaeger
	}
	return nil
}

// ETCD数据源配置
type ETCD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 端点
	Endpoints []string `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// 连接超时
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3,oneof" json:"timeout,omitempty"`
	// 用户名
	Username *string `protobuf:"bytes,3,opt,name=username,proto3,oneof" json:"username,omitempty"`
	// 密码
	Password *string `protobuf:"bytes,4,opt,name=password,proto3,oneof" json:"password,omitempty"`
}

func (x *ETCD) Reset() {
	*x = ETCD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ETCD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCD) ProtoMessage() {}

func (x *ETCD) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCD.ProtoReflect.Descriptor instead.
func (*ETCD) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{12}
}

func (x *ETCD) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *ETCD) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *ETCD) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *ETCD) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

// 服务注册发现配置
type Discovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型， 名称和数据源保持一致，例如etcd
	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	// 数据源
	Etcd *ETCD `protobuf:"bytes,2,opt,name=etcd,proto3" json:"etcd,omitempty"`
}

func (x *Discovery) Reset() {
	*x = Discovery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Discovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discovery) ProtoMessage() {}

func (x *Discovery) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discovery.ProtoReflect.Descriptor instead.
func (*Discovery) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{13}
}

func (x *Discovery) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Discovery) GetEtcd() *ETCD {
	if x != nil {
		return x.Etcd
	}
	return nil
}

// 邮件发送配置
type EmailConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// 发送的邮箱密码
	Pass string `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	// 发送的邮箱服务器
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	// 发送的邮箱端口
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *EmailConfig) Reset() {
	*x = EmailConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailConfig) ProtoMessage() {}

func (x *EmailConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailConfig.ProtoReflect.Descriptor instead.
func (*EmailConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{14}
}

func (x *EmailConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *EmailConfig) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *EmailConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *EmailConfig) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// 邮件目标
type ReceiverEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发送给谁
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// 发送的主题
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// 发送的内容， 优先级高于模板
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 发送的模板，内容字段为空时， 以数据填充模板后发送
	Template string `protobuf:"bytes,4,opt,name=template,proto3" json:"template,omitempty"`
	// 抄送对象
	Cc []string `protobuf:"bytes,5,rep,name=cc,proto3" json:"cc,omitempty"`
	// 附件URL，一般为oss地址
	AttachUrl []string `protobuf:"bytes,6,rep,name=attachUrl,proto3" json:"attachUrl,omitempty"`
	// 发送的内容类型
	ContentType string `protobuf:"bytes,7,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *ReceiverEmail) Reset() {
	*x = ReceiverEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiverEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiverEmail) ProtoMessage() {}

func (x *ReceiverEmail) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiverEmail.ProtoReflect.Descriptor instead.
func (*ReceiverEmail) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{15}
}

func (x *ReceiverEmail) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ReceiverEmail) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ReceiverEmail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReceiverEmail) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *ReceiverEmail) GetCc() []string {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *ReceiverEmail) GetAttachUrl() []string {
	if x != nil {
		return x.AttachUrl
	}
	return nil
}

func (x *ReceiverEmail) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

// 电话目标
type ReceiverPhone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiverPhone) Reset() {
	*x = ReceiverPhone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiverPhone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiverPhone) ProtoMessage() {}

func (x *ReceiverPhone) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiverPhone.ProtoReflect.Descriptor instead.
func (*ReceiverPhone) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{16}
}

// hook目标
type ReceiverHook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// hook地址
	Webhook string `protobuf:"bytes,2,opt,name=webhook,proto3" json:"webhook,omitempty"`
	// 钉钉消息json内容，支持模板， 优先级高于模板
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 模板
	Template string `protobuf:"bytes,4,opt,name=template,proto3" json:"template,omitempty"`
	// 加签秘钥
	Secret string `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ReceiverHook) Reset() {
	*x = ReceiverHook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiverHook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiverHook) ProtoMessage() {}

func (x *ReceiverHook) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiverHook.ProtoReflect.Descriptor instead.
func (*ReceiverHook) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{17}
}

func (x *ReceiverHook) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReceiverHook) GetWebhook() string {
	if x != nil {
		return x.Webhook
	}
	return ""
}

func (x *ReceiverHook) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReceiverHook) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *ReceiverHook) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type Receiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hooks       []*ReceiverHook  `protobuf:"bytes,1,rep,name=hooks,proto3" json:"hooks,omitempty"`
	Phones      []*ReceiverPhone `protobuf:"bytes,2,rep,name=phones,proto3" json:"phones,omitempty"`
	Emails      []*ReceiverEmail `protobuf:"bytes,3,rep,name=emails,proto3" json:"emails,omitempty"`
	EmailConfig *EmailConfig     `protobuf:"bytes,4,opt,name=emailConfig,proto3" json:"emailConfig,omitempty"`
}

func (x *Receiver) Reset() {
	*x = Receiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receiver) ProtoMessage() {}

func (x *Receiver) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receiver.ProtoReflect.Descriptor instead.
func (*Receiver) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{18}
}

func (x *Receiver) GetHooks() []*ReceiverHook {
	if x != nil {
		return x.Hooks
	}
	return nil
}

func (x *Receiver) GetPhones() []*ReceiverPhone {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *Receiver) GetEmails() []*ReceiverEmail {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *Receiver) GetEmailConfig() *EmailConfig {
	if x != nil {
		return x.EmailConfig
	}
	return nil
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// default, slog, aliyun, zap
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// 日志级别
	Level string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	// 阿里云日志
	Aliyun *AliYunLogConfig `protobuf:"bytes,4,opt,name=aliyun,proto3,oneof" json:"aliyun,omitempty"`
	// zap日志
	Zap *ZapLogConfig `protobuf:"bytes,5,opt,name=zap,proto3,oneof" json:"zap,omitempty"`
	// slog日志
	Slog *SLogConfig `protobuf:"bytes,6,opt,name=slog,proto3,oneof" json:"slog,omitempty"`
	// loki日志
	Loki *LokiLogConfig `protobuf:"bytes,7,opt,name=loki,proto3,oneof" json:"loki,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{19}
}

func (x *Log) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Log) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Log) GetAliyun() *AliYunLogConfig {
	if x != nil {
		return x.Aliyun
	}
	return nil
}

func (x *Log) GetZap() *ZapLogConfig {
	if x != nil {
		return x.Zap
	}
	return nil
}

func (x *Log) GetSlog() *SLogConfig {
	if x != nil {
		return x.Slog
	}
	return nil
}

func (x *Log) GetLoki() *LokiLogConfig {
	if x != nil {
		return x.Loki
	}
	return nil
}

type AliYunLogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey     string `protobuf:"bytes,1,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	AccessSecret  string `protobuf:"bytes,2,opt,name=accessSecret,proto3" json:"accessSecret,omitempty"`
	Endpoint      string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	SecurityToken string `protobuf:"bytes,4,opt,name=securityToken,proto3" json:"securityToken,omitempty"`
	ExpireTime    string `protobuf:"bytes,5,opt,name=expireTime,proto3" json:"expireTime,omitempty"`
	Project       string `protobuf:"bytes,6,opt,name=project,proto3" json:"project,omitempty"`
	Store         string `protobuf:"bytes,7,opt,name=store,proto3" json:"store,omitempty"`
	// 是否结构化
	Json bool `protobuf:"varint,8,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *AliYunLogConfig) Reset() {
	*x = AliYunLogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliYunLogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliYunLogConfig) ProtoMessage() {}

func (x *AliYunLogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliYunLogConfig.ProtoReflect.Descriptor instead.
func (*AliYunLogConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{20}
}

func (x *AliYunLogConfig) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *AliYunLogConfig) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

func (x *AliYunLogConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AliYunLogConfig) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

func (x *AliYunLogConfig) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *AliYunLogConfig) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *AliYunLogConfig) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *AliYunLogConfig) GetJson() bool {
	if x != nil {
		return x.Json
	}
	return false
}

type ZapLogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否结构化
	Json bool `protobuf:"varint,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *ZapLogConfig) Reset() {
	*x = ZapLogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZapLogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZapLogConfig) ProtoMessage() {}

func (x *ZapLogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZapLogConfig.ProtoReflect.Descriptor instead.
func (*ZapLogConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{21}
}

func (x *ZapLogConfig) GetJson() bool {
	if x != nil {
		return x.Json
	}
	return false
}

type SLogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json bool `protobuf:"varint,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *SLogConfig) Reset() {
	*x = SLogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLogConfig) ProtoMessage() {}

func (x *SLogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLogConfig.ProtoReflect.Descriptor instead.
func (*SLogConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{22}
}

func (x *SLogConfig) GetJson() bool {
	if x != nil {
		return x.Json
	}
	return false
}

type LokiLogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	App string `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *LokiLogConfig) Reset() {
	*x = LokiLogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LokiLogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LokiLogConfig) ProtoMessage() {}

func (x *LokiLogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LokiLogConfig.ProtoReflect.Descriptor instead.
func (*LokiLogConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{23}
}

func (x *LokiLogConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LokiLogConfig) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

// minio
type Minio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyID     string `protobuf:"bytes,2,opt,name=accessKeyID,proto3" json:"accessKeyID,omitempty"`
	AccessKeySecret string `protobuf:"bytes,3,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"`
	BucketName      string `protobuf:"bytes,4,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	// 是否使用https
	Secure bool `protobuf:"varint,5,opt,name=secure,proto3" json:"secure,omitempty"`
}

func (x *Minio) Reset() {
	*x = Minio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Minio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Minio) ProtoMessage() {}

func (x *Minio) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Minio.ProtoReflect.Descriptor instead.
func (*Minio) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{24}
}

func (x *Minio) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Minio) GetAccessKeyID() string {
	if x != nil {
		return x.AccessKeyID
	}
	return ""
}

func (x *Minio) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *Minio) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *Minio) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

// tencent oss
type TencentOss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketURL  string `protobuf:"bytes,1,opt,name=bucketURL,proto3" json:"bucketURL,omitempty"`
	SecretID   string `protobuf:"bytes,2,opt,name=secretID,proto3" json:"secretID,omitempty"`
	SecretKey  string `protobuf:"bytes,3,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	Expiry     int64  `protobuf:"varint,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	BucketName string `protobuf:"bytes,5,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	IsPublic   bool   `protobuf:"varint,6,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
	Region     string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *TencentOss) Reset() {
	*x = TencentOss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TencentOss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TencentOss) ProtoMessage() {}

func (x *TencentOss) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TencentOss.ProtoReflect.Descriptor instead.
func (*TencentOss) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{25}
}

func (x *TencentOss) GetBucketURL() string {
	if x != nil {
		return x.BucketURL
	}
	return ""
}

func (x *TencentOss) GetSecretID() string {
	if x != nil {
		return x.SecretID
	}
	return ""
}

func (x *TencentOss) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *TencentOss) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *TencentOss) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *TencentOss) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *TencentOss) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// ali oss
type AliOss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyID     string `protobuf:"bytes,2,opt,name=accessKeyID,proto3" json:"accessKeyID,omitempty"`
	AccessKeySecret string `protobuf:"bytes,3,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"`
	BucketName      string `protobuf:"bytes,4,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
}

func (x *AliOss) Reset() {
	*x = AliOss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliOss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliOss) ProtoMessage() {}

func (x *AliOss) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliOss.ProtoReflect.Descriptor instead.
func (*AliOss) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{26}
}

func (x *AliOss) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AliOss) GetAccessKeyID() string {
	if x != nil {
		return x.AccessKeyID
	}
	return ""
}

func (x *AliOss) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *AliOss) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

// local
type LocalStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	DownloadPre string `protobuf:"bytes,3,opt,name=downloadPre,proto3" json:"downloadPre,omitempty"`
}

func (x *LocalStorage) Reset() {
	*x = LocalStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalStorage) ProtoMessage() {}

func (x *LocalStorage) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalStorage.ProtoReflect.Descriptor instead.
func (*LocalStorage) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{27}
}

func (x *LocalStorage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LocalStorage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LocalStorage) GetDownloadPre() string {
	if x != nil {
		return x.DownloadPre
	}
	return ""
}

// 文件大小限制
type FileLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Max int64 `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	Min int64 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
}

func (x *FileLimit) Reset() {
	*x = FileLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLimit) ProtoMessage() {}

func (x *FileLimit) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLimit.ProtoReflect.Descriptor instead.
func (*FileLimit) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{28}
}

func (x *FileLimit) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *FileLimit) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

type Oss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// oss类型
	Type       string        `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Minio      *Minio        `protobuf:"bytes,2,opt,name=minio,proto3" json:"minio,omitempty"`
	TencentOss *TencentOss   `protobuf:"bytes,3,opt,name=tencentOss,proto3" json:"tencentOss,omitempty"`
	AliOss     *AliOss       `protobuf:"bytes,4,opt,name=aliOss,proto3" json:"aliOss,omitempty"`
	Local      *LocalStorage `protobuf:"bytes,5,opt,name=local,proto3" json:"local,omitempty"`
	// 文件大小
	LimitSize map[string]*FileLimit `protobuf:"bytes,6,rep,name=limitSize,proto3" json:"limitSize,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 是否打开oss
	Open bool `protobuf:"varint,7,opt,name=open,proto3" json:"open,omitempty"`
}

func (x *Oss) Reset() {
	*x = Oss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oss) ProtoMessage() {}

func (x *Oss) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oss.ProtoReflect.Descriptor instead.
func (*Oss) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{29}
}

func (x *Oss) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Oss) GetMinio() *Minio {
	if x != nil {
		return x.Minio
	}
	return nil
}

func (x *Oss) GetTencentOss() *TencentOss {
	if x != nil {
		return x.TencentOss
	}
	return nil
}

func (x *Oss) GetAliOss() *AliOss {
	if x != nil {
		return x.AliOss
	}
	return nil
}

func (x *Oss) GetLocal() *LocalStorage {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *Oss) GetLimitSize() map[string]*FileLimit {
	if x != nil {
		return x.LimitSize
	}
	return nil
}

func (x *Oss) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

// 拨打电话
type ReceiverPhone_Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiverPhone_Call) Reset() {
	*x = ReceiverPhone_Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiverPhone_Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiverPhone_Call) ProtoMessage() {}

func (x *ReceiverPhone_Call) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiverPhone_Call.ProtoReflect.Descriptor instead.
func (*ReceiverPhone_Call) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{16, 0}
}

// 短信
type ReceiverPhone_Sms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiverPhone_Sms) Reset() {
	*x = ReceiverPhone_Sms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiverPhone_Sms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiverPhone_Sms) ProtoMessage() {}

func (x *ReceiverPhone_Sms) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiverPhone_Sms.ProtoReflect.Descriptor instead.
func (*ReceiverPhone_Sms) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{16, 1}
}

var File_conf_conf_proto protoreflect.FileDescriptor

var file_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x02, 0x0a, 0x06,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x74,
	0x74, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x72,
	0x70, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0x6f, 0x0a, 0x0a, 0x48, 0x54, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12,
	0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x22, 0x6f, 0x0a, 0x0a, 0x47, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x31, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x4a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x22, 0x9d,
	0x02, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x64, 0x62,
	0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x34,
	0x0a, 0x06, 0x4e, 0x75, 0x74, 0x73, 0x44, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x22, 0x1a, 0x0a, 0x04, 0x46, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x94, 0x01, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x6e, 0x75, 0x74,
	0x73, 0x44, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4e, 0x75, 0x74, 0x73, 0x44, 0x42, 0x52, 0x06, 0x6e, 0x75, 0x74,
	0x73, 0x44, 0x42, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x46, 0x72, 0x65,
	0x65, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x0b, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x38, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0x24, 0x0a, 0x06, 0x4a, 0x61, 0x65, 0x67, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x6a, 0x61, 0x65,
	0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4a, 0x61, 0x65, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6a, 0x61, 0x65,
	0x67, 0x65, 0x72, 0x22, 0xc6, 0x01, 0x0a, 0x04, 0x45, 0x54, 0x43, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x47, 0x0a, 0x09,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x04, 0x65, 0x74, 0x63, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x45, 0x54, 0x43, 0x44, 0x52,
	0x04, 0x65, 0x74, 0x63, 0x64, 0x22, 0x5d, 0x0a, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x02, 0x63, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1e, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x1a, 0x06, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x1a,
	0x05, 0x0a, 0x03, 0x53, 0x6d, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x05, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x2f,
	0x0a, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x37, 0x0a, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9c, 0x02, 0x0a, 0x03, 0x4c, 0x6f,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x06, 0x61,
	0x6c, 0x69, 0x79, 0x75, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x6c, 0x69, 0x59, 0x75, 0x6e, 0x4c, 0x6f, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6c, 0x69, 0x79, 0x75, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x03, 0x7a, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x5a, 0x61, 0x70, 0x4c,
	0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x03, 0x7a, 0x61, 0x70, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x4c, 0x6f, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x02, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x67, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x6f, 0x6b, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4c, 0x6f, 0x6b, 0x69, 0x4c,
	0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x03, 0x52, 0x04, 0x6c, 0x6f, 0x6b, 0x69,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6c, 0x69, 0x79, 0x75, 0x6e, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x7a, 0x61, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6c, 0x6f, 0x67, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x6b, 0x69, 0x22, 0xf9, 0x01, 0x0a, 0x0f, 0x41, 0x6c, 0x69,
	0x59, 0x75, 0x6e, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x22, 0x0a, 0x0c, 0x5a, 0x61, 0x70, 0x4c, 0x6f, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0a, 0x53, 0x4c, 0x6f, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x0d, 0x4c, 0x6f,
	0x6b, 0x69, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22,
	0xa7, 0x01, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x0a, 0x54, 0x65,
	0x6e, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a,
	0x06, 0x41, 0x6c, 0x69, 0x4f, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x56, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x22, 0x2f, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x22, 0xf1, 0x02, 0x0a, 0x03, 0x4f, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4d,
	0x69, 0x6e, 0x69, 0x6f, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x12, 0x34, 0x0a, 0x0a, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x54, 0x65, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x4f, 0x73, 0x73, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x73,
	0x73, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x6c, 0x69, 0x4f, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x6c, 0x69,
	0x4f, 0x73, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x69, 0x4f, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4f, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x1a, 0x51, 0x0a, 0x0e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x64, 0x65, 0x2d,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2f, 0x6d, 0x6f, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData = file_conf_conf_proto_rawDesc
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_conf_conf_proto_rawDescData)
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_conf_conf_proto_goTypes = []any{
	(*Server)(nil),              // 0: pkg.conf.Server
	(*HTTPServer)(nil),          // 1: pkg.conf.HTTPServer
	(*GRPCServer)(nil),          // 2: pkg.conf.GRPCServer
	(*JWT)(nil),                 // 3: pkg.conf.JWT
	(*Database)(nil),            // 4: pkg.conf.Database
	(*Redis)(nil),               // 5: pkg.conf.Redis
	(*NutsDB)(nil),              // 6: pkg.conf.NutsDB
	(*Free)(nil),                // 7: pkg.conf.Free
	(*Cache)(nil),               // 8: pkg.conf.Cache
	(*MicroServer)(nil),         // 9: pkg.conf.MicroServer
	(*Jaeger)(nil),              // 10: pkg.conf.Jaeger
	(*Tracer)(nil),              // 11: pkg.conf.Tracer
	(*ETCD)(nil),                // 12: pkg.conf.ETCD
	(*Discovery)(nil),           // 13: pkg.conf.Discovery
	(*EmailConfig)(nil),         // 14: pkg.conf.EmailConfig
	(*ReceiverEmail)(nil),       // 15: pkg.conf.ReceiverEmail
	(*ReceiverPhone)(nil),       // 16: pkg.conf.ReceiverPhone
	(*ReceiverHook)(nil),        // 17: pkg.conf.ReceiverHook
	(*Receiver)(nil),            // 18: pkg.conf.Receiver
	(*Log)(nil),                 // 19: pkg.conf.Log
	(*AliYunLogConfig)(nil),     // 20: pkg.conf.AliYunLogConfig
	(*ZapLogConfig)(nil),        // 21: pkg.conf.ZapLogConfig
	(*SLogConfig)(nil),          // 22: pkg.conf.SLogConfig
	(*LokiLogConfig)(nil),       // 23: pkg.conf.LokiLogConfig
	(*Minio)(nil),               // 24: pkg.conf.Minio
	(*TencentOss)(nil),          // 25: pkg.conf.TencentOss
	(*AliOss)(nil),              // 26: pkg.conf.AliOss
	(*LocalStorage)(nil),        // 27: pkg.conf.LocalStorage
	(*FileLimit)(nil),           // 28: pkg.conf.FileLimit
	(*Oss)(nil),                 // 29: pkg.conf.Oss
	nil,                         // 30: pkg.conf.Server.MetadataEntry
	(*ReceiverPhone_Call)(nil),  // 31: pkg.conf.ReceiverPhone.Call
	(*ReceiverPhone_Sms)(nil),   // 32: pkg.conf.ReceiverPhone.Sms
	nil,                         // 33: pkg.conf.Oss.LimitSizeEntry
	(*durationpb.Duration)(nil), // 34: google.protobuf.Duration
}
var file_conf_conf_proto_depIdxs = []int32{
	30, // 0: pkg.conf.Server.metadata:type_name -> pkg.conf.Server.MetadataEntry
	34, // 1: pkg.conf.HTTPServer.timeout:type_name -> google.protobuf.Duration
	34, // 2: pkg.conf.GRPCServer.timeout:type_name -> google.protobuf.Duration
	34, // 3: pkg.conf.JWT.expire:type_name -> google.protobuf.Duration
	34, // 4: pkg.conf.Redis.read_timeout:type_name -> google.protobuf.Duration
	34, // 5: pkg.conf.Redis.write_timeout:type_name -> google.protobuf.Duration
	34, // 6: pkg.conf.Redis.dial_timeout:type_name -> google.protobuf.Duration
	5,  // 7: pkg.conf.Cache.redis:type_name -> pkg.conf.Redis
	6,  // 8: pkg.conf.Cache.nutsDB:type_name -> pkg.conf.NutsDB
	7,  // 9: pkg.conf.Cache.free:type_name -> pkg.conf.Free
	34, // 10: pkg.conf.MicroServer.timeout:type_name -> google.protobuf.Duration
	10, // 11: pkg.conf.Tracer.jaeger:type_name -> pkg.conf.Jaeger
	34, // 12: pkg.conf.ETCD.timeout:type_name -> google.protobuf.Duration
	12, // 13: pkg.conf.Discovery.etcd:type_name -> pkg.conf.ETCD
	17, // 14: pkg.conf.Receiver.hooks:type_name -> pkg.conf.ReceiverHook
	16, // 15: pkg.conf.Receiver.phones:type_name -> pkg.conf.ReceiverPhone
	15, // 16: pkg.conf.Receiver.emails:type_name -> pkg.conf.ReceiverEmail
	14, // 17: pkg.conf.Receiver.emailConfig:type_name -> pkg.conf.EmailConfig
	20, // 18: pkg.conf.Log.aliyun:type_name -> pkg.conf.AliYunLogConfig
	21, // 19: pkg.conf.Log.zap:type_name -> pkg.conf.ZapLogConfig
	22, // 20: pkg.conf.Log.slog:type_name -> pkg.conf.SLogConfig
	23, // 21: pkg.conf.Log.loki:type_name -> pkg.conf.LokiLogConfig
	24, // 22: pkg.conf.Oss.minio:type_name -> pkg.conf.Minio
	25, // 23: pkg.conf.Oss.tencentOss:type_name -> pkg.conf.TencentOss
	26, // 24: pkg.conf.Oss.aliOss:type_name -> pkg.conf.AliOss
	27, // 25: pkg.conf.Oss.local:type_name -> pkg.conf.LocalStorage
	33, // 26: pkg.conf.Oss.limitSize:type_name -> pkg.conf.Oss.LimitSizeEntry
	28, // 27: pkg.conf.Oss.LimitSizeEntry.value:type_name -> pkg.conf.FileLimit
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conf_conf_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HTTPServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GRPCServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*JWT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*NutsDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Free); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Cache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*MicroServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Jaeger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Tracer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ETCD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Discovery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*EmailConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiverEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiverPhone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiverHook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Receiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*AliYunLogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ZapLogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*SLogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*LokiLogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Minio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*TencentOss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*AliOss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*LocalStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*FileLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*Oss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiverPhone_Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiverPhone_Sms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_conf_conf_proto_msgTypes[0].OneofWrappers = []any{}
	file_conf_conf_proto_msgTypes[9].OneofWrappers = []any{}
	file_conf_conf_proto_msgTypes[12].OneofWrappers = []any{}
	file_conf_conf_proto_msgTypes[19].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conf_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_rawDesc = nil
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
